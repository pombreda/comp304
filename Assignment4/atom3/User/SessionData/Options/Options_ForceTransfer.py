"""
Options_ForceTransfer.py

This file is automatically generated/modified when Options are configured.
If this file is corrupted/deleted, it will be re-created next time Options are configured.
So use the Options dialog instead of messing around in here :D

Format: [ initialValue, typeCode, stringPrompt, helpString ] 
See OptionDialog.py in UserInterface for typeCodes. 

Last modified on Mon Mar 15 18:38:13 2010 by Unamed
"""

def getOptionDictionary():

  optionDictionary = dict()

  optionDictionary['label0'] = [False, [9, 'Times 12', 'blue', 'left'], '\nThis algorithm is applied only to selected nodes.\nHowever, if no nodes are selected it is applied globally.\n', '']
  optionDictionary['Auto apply'] = [False, [0], 'Always active', 'Runs force transfer whenever a node is added/dragged in the model']
  optionDictionary['Use Statusbar'] = [False, [0], 'Enable statusbar info', 'Shows number of iterations used to find stable configuration in the statusbar']
  optionDictionary['Minimum node distance'] = [20, [1], 'Minimum node seperation', 'Node entities will be seperated by a minimum of this many pixels']
  optionDictionary['Minimum link distance'] = [20, [1], 'Minimum link node seperation', 'Distance in pixels that link nodes should be seperated from other nodes']
  optionDictionary['Minimum control point distance'] = [20, [1], 'Minimum link control point seperation', 'Distance that link control points should be seperated from other nodes']
  optionDictionary['Seperation Force'] = [0.20000000000000001, [2], 'Seperation force', 'Magnitude of the force that will seperate overlapping nodes']
  optionDictionary['Animation Time Updates'] = [0.01, [2], 'Animation time', 'Seconds between animation frame updates, set 0 to disable animations']
  optionDictionary['Max Animation Iterations'] = [15, [1], 'Max animation iterations', 'Stop updating animation to screen after max iterations to speed process up']
  optionDictionary['Max Total Iterations'] = [50, [1], 'Max total iterations', 'Stop iterating, even if stable configuration not reached, to prevent unreasonably long periods of non-interactivity']
  optionDictionary['Border Distance'] = [30, [1], 'Border distance', 'If an entity is pushed off the canvas, the canvas will be re-centered plus this pixel offset to the top left']
  return optionDictionary
