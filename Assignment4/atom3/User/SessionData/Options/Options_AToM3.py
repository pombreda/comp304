"""
Options_AToM3.py

This file is automatically generated/modified when Options are configured.
If this file is corrupted/deleted, it will be re-created next time Options are configured.
So use the Options dialog instead of messing around in here :D

Format: [ initialValue, typeCode, stringPrompt, helpString ] 
See OptionDialog.py in UserInterface for typeCodes. 

Last modified on Tue Mar 16 19:11:03 2010 by Unamed
"""

def getOptionDictionary():

  optionDictionary = dict()

  optionDictionary['Menubar'] = [False, [0], 'Enable top menubar', "\nA static toolbar on the top of the window like many applications have.\n\nThis is legacy code from the 0.2 AToM3 version series.\nIt lacks many of the items present in the dynamically created popup-menus!\n\nWARNING: Not recommended simply because it's missing so much... if you are\ninterested in upgrading it, please see StaticMenus.py, popupMenuElements.py,\nand popupMenuCreator.py files in atom3/kernel/UserInterface/\n"]
  optionDictionary['Extra Consoles'] = [False, [0], 'Enable debugging consoles', '\nThese consoles can allow you to query the state of variables & run methods at \nrun-time.\n\nThese consoles are legacies of the 0.2 AToM3 version series. \n\nWARNING: They are a bit buggy...\n']
  optionDictionary['Fullscreen'] = [False, [0], 'Start AToM3 in fullscreen', '\nThis option is equivelent to starting AToM3 in Windowed mode and then maximizing\nthe window to occupy the entire screen. \n\nWARNING: May not work on all platforms. Works on Windows though! :) ']
  optionDictionary['Generate Graphics'] = [True, [0], 'Generate graphics', 'If disabled, AToM3 will not be able to open models containing graphics']
  optionDictionary['Smooth Arrows'] = [True, [0], 'Smooth arrows by default', 'If enabled, new arrows will be drawn smooth.']
  optionDictionary['line1'] = ['', [11], '', '']
  optionDictionary['UI Behavior Model'] = ['', [4, 'Choose UI Model', [('Python File', '*.py')], 0, '/Users/Chris/Documents/Comp304/Assignment4/atom3/User'], 'UI Behavior Model', "Choose the statechart GUI behavior model you wish to use with AToM3\n\nHint: the current model is located in:\natom3/Kernel/UserInterface/defaultUI_Statechart/UI_Statechart_MDL.py\n\nSo you can simple load this up, then save it in the UserArea and modify it there.\nWhen done, Generate DES, and choose Compile with the Tkinter option\nNow you just need to point this here option to the compiled statechart\n\nNOTE: The class name of your statechart must be 'UI_Statechart_MDL'"]
  optionDictionary['UI Key Bindings'] = ['', [4, 'Choose UI Keybinds', [('Python File', '*.py')], 0, '/Users/Chris/Documents/Comp304/Assignment4/atom3/User'], 'UI Keybindings', 'This allows you to choose a customized keybinding file for use with AToM3.\nie. You can copy the KeyBinds.py file in the Kerenl.UserInterface\ndirectory to the user area, modify it, then tell AToM3 to load\nit here, instead of the default one.']
  optionDictionary['Open Formalisms'] = [[], [10, 'Choose File', [('Meta-Model', '*_META.py'), ('Python File', '*.py')], 1, '/Users/Chris/Documents/Comp304/Assignment4/atom3/Formalisms'], 'Multi-Formalism Environment', "\nSet which formalisms/meta-models you want AToM3 to START with by default. \nAll new formalisms can be found by the *_META.py extension, for old formalisms\nyou'll need to hunt and peck until you find the correct *.py file. \n\nNOTE: This is overriden if you start atom3.py with arguments...\nExample 1: \natom3.py CD_ClassDiagramsV3 \nThis opens the formalism CD_ClassDiagramsV3_META.py\n\nExample 2: \natom3.py D:\x07tom3\\Kernel\\UserInterface\\defaultUI_Statechart\\UI_Statechart_MDL.py\nThis opens all the formalisms needed for the model file. The model file must\nhave the _MDL.py extension or it will not be recognized. Spaces are allowed in\nthe path (the script atom3.py can put it together again), but make sure the path\nis absolute, that is that it starts with a drive letter (for Windows users). \n"]
  optionDictionary['Last open model'] = [['/Users/Chris/Documents/Comp304/Assignment4/User Models/wristwatch/DigitalWatchStatechart_DCharts_MDL.py', '/Users/Chris/Documents/Comp304/Assignment4/atom3/Models/DCharts/TrafficLight/TrafficLight_and_EnvironmentBehaviour_DCharts_mdl.py', '/Users/Chris/Documents/Comp304/Assignment4/atom3/Models/DCharts/TrafficLight/TrafficLightBehaviour_DCharts_mdl.py'], [6], '', '']
  optionDictionary['Last open meta-model'] = [[], [6], '', '']
  optionDictionary['Last Initial Dirs'] = [[], [6], '', '']
  optionDictionary['Model Source Paths'] = [[], [6], '', '']
  optionDictionary['line2'] = ['', [11], '', '']
  optionDictionary['Enable Undo'] = [False, [0], 'Enable Undo (Not recommended)', '\nWARNING: Undo is not supported anymore. Undo CAN create unhandled exceptions!\nEnabled (and working), it simply saves and loads the model (which is slow).\nPart of the problem is that it does not save the model after each change.\n\nWhy no working undo? Because it was not built-in to AToM3 originally!\nAdding it in afterwards is like putting a broken egg back together :p']
  optionDictionary['Modifications per undo'] = [0, [1], 'Modifications per undo', 'Saves the model every X modfications to provide undo ability']
  optionDictionary['Undo depth'] = [20, [1], 'Maximum undo depth', 'When maximum undo depth reached, old undo files are overwritten']
  optionDictionary['Toolbar height'] = [0, [1], 'Toolbar height', 'How many pixels high the toolbar will be\n\nIf the value "0" is set, the toolbar will always be just high enough\nOtherwise, if the height is set too low, scrolling in Y will be necessary']
  optionDictionary['Buttons per row'] = [12, [1], 'Buttons per row', 'Maximum buttons a meta-model can display on a single row\nAdditional rows will be added to fit extra buttons\n\nIf the value "0" is set, the per meta-model defaults will be used\n\nThis option only takes effect when openning new meta-models']
  optionDictionary['line3'] = ['', [11], '', '']
  optionDictionary['QOCA Options'] = [[[False, True, 'Cassowary', 'Pipe', '127.0.0.1', 14059, None]], [14, 'Enable QOCA constraint solver', True, [0], 'If disabled, layout will not function correctly for some formalisms', 'Enable QOCA auto-solve', True, [0], 'Certain events trigger a re-solve automatically', 'QOCA solver type', 'Cassowary', [8, 'Cassowary', 'Equality', 'Inequality'], 'The various solver types use different metrics...', 'QOCA connection type', 'Pipe', [8, 'Pipe', 'TCP/IP'], 'Pipe connection automatically starts a the QOCA java jar file\nTCP/IP requires manually starting the QOCA java jar server', 'QOCA server IP', '127.0.0.1', [3], 'IP address string if using TCP/IP connection mode', 'QOCA server port', 14059, [1], 'Port address integer if using TCP/IP connection mode', '\nNote 1: Changes will take effect on AToM3 restart only\nNote 2: Pipe option assumes Java is in environment path', None, [9, 'Times 12', 'red', 'left'], ''], 'QOCA options', 'QOCA is an incremental constraint solver used for graphic layout']
  return optionDictionary
