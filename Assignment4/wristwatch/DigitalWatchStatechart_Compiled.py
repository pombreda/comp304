# Python source code generated by SCC (StateChart Compiler) 0.3, written by Thomas Feng
#   Source: /home/2008/cshank1/Comp304/a4/User Models/wristwatch/DigitalWatchStatechart.des
#   Date:   March 16, 2010
#   Time:   19:8:1


# Header Section -- definition and module importation used by the following parts
import sys
import copy
import time
import string
import thread
import threading
import time


class State:

  def __init__(self):

    self.StateID=-1
    self.Next=None

  def copy(self):

    s=State()
    s.StateID=self.StateID
    if self.Next!=None:
      s.Next=self.Next.copy()
    return s


class History:

  def __init__(self):

    self.States=None
    self.Times=None
    self.Submodel=None


class EventList:

  def __init__(self):

    self.Event=None
    self.Next=None

  def Append(self, e):

    if isinstance(e, str):
      el=EventList()
      el.Event=e
      cur=this
      while cur.Next!=None and cur.Event!=e:
        cur=cur.Next
      if cur.Event!=e:
        cur.Next=el

    elif isinstance(e, EventList):
      el=e
      while el!=None:
        self.Append(el.Event)
        el=el.Next


class StringList:

  def __init__(self, str=""):

    self.str=str
    self.Next=None

  def sort(self):

    if self.Next!=None:
      self.Next=self.Next.sort()
      if self.Next.str<self.str:
        first=self.Next
        prev=self.Next
        next=self.Next.Next
        while next!=None and next.str<self.str:
          prev=next
          next=next.Next
        self.Next=next
        prev.Next=self
        return first
    return self


class IntList:

  def __init__(self, int=0):

    self.int=int
    self.Next=None


class Hierarchy:

  def __init__(self):

    self.StateName=None
    self.PathName=None
    self.StateNum=-1
    self.Level=-1
    self.Next=None


class StateMachine:

  def eventStr2Int(self, event):

    return -1

  def getCurrentStateList(self):

    return None

  def getCurrentState(self):

    return "[]"

  def getEnabledEvents(self):

    return None

  def initModel(self, run_initializer=1, run_enter_actions=1):

    pass

  def isInState(self, s, check_substate=1, use_backup=1):

    return 0

  def getParentState(self, state):

    return -1

  def isHistoryState(self, state):

    return 0

  def isLeafState(self, state):

    return 0

  def getHierarchy(self, start_level=0, state_prefix=None):

    return None

  def topLevelHistory(self):

    pass

  def recordAllEnteredStates(self):

    pass

  def runAllEnterActions(self):

    pass

  def runInitializer(self):

    pass

  def runFinalizer(self):

    pass

  def runInteractor(self):

    pass

  def state(self):

    pass

  def handleEvent(self, se, params=[], cond=None, scheduler=None):

    return 0

  def event(self, e, params=[], cond=None, scheduler=None):

    pass


def startsWith(s, ss):

  return ss==None or (s!=None and len(s)>=len(ss) and s[0:len(ss)]==ss)


# used only when --ext is set
from code import InteractiveInterpreter


# Main Class -- the top level model that is executed from the command line
class DigitalWatchStatechart(StateMachine):

  # Constants for this model
  StateNum=37
  EventNames=["__INTERNAL_0_TIME_0",
              "__INTERNAL_0_TIME_1",
              "__INTERNAL_0_TIME_10",
              "__INTERNAL_0_TIME_11",
              "__INTERNAL_0_TIME_12",
              "__INTERNAL_0_TIME_13",
              "__INTERNAL_0_TIME_14",
              "__INTERNAL_0_TIME_15",
              "__INTERNAL_0_TIME_16",
              "__INTERNAL_0_TIME_17",
              "__INTERNAL_0_TIME_2",
              "__INTERNAL_0_TIME_3",
              "__INTERNAL_0_TIME_4",
              "__INTERNAL_0_TIME_5",
              "__INTERNAL_0_TIME_6",
              "__INTERNAL_0_TIME_7",
              "__INTERNAL_0_TIME_8",
              "__INTERNAL_0_TIME_9",
              "alarmStart",
              "alarmStop",
              "bottomLeftPressed",
              "bottomLeftReleased",
              "bottomRightPressed",
              "bottomRightReleased",
              "chronoDisplay",
              "resetChrono",
              "setAlarm",
              "start",
              "stop",
              "timePause",
              "timeStart",
              "toggleChrono",
              "topLeftPressed",
              "topRightPressed",
              "topRightReleased" 
             ]
  StateNames=["Setup",
              "Stopped",
              "Time Edit",
              "Watch",
              "Watch.Alarm State",
              "Watch.Alarm State.Alarm Set",
              "Watch.Alarm State.Alarm Unset",
              "Watch.Alarm State.Alarming",
              "Watch.Alarming State",
              "Watch.Alarming State.Alarm Off",
              "Watch.Alarming State.Light Off",
              "Watch.Alarming State.Light On",
              "Watch.Chrono State",
              "Watch.Chrono State.Chrono_On",
              "Watch.Chrono State.Chrono_On.Paused",
              "Watch.Chrono State.Chrono_On.Running",
              "Watch.Chrono State.Reset",
              "Watch.Clock State",
              "Watch.Clock State.Update",
              "Watch.Clock State.Wait",
              "Watch.Indiglo",
              "Watch.Indiglo.Indiglo_Off",
              "Watch.Indiglo.Pressed",
              "Watch.Indiglo.Waiting",
              "Watch.Watch_Running",
              "Watch.Watch_Running.Running",
              "Watch.Watch_Running.Running.Alarm Edit",
              "Watch.Watch_Running.Running.Alarm Increase",
              "Watch.Watch_Running.Running.Alarm Increase Auto",
              "Watch.Watch_Running.Running.Chrono",
              "Watch.Watch_Running.Running.Next_Select_Alarm",
              "Watch.Watch_Running.Running.Next_Select_Time",
              "Watch.Watch_Running.Running.Time",
              "Watch.Watch_Running.Running.Time Increase",
              "Watch.Watch_Running.Running.Time Increase Auto",
              "Watch.Watch_Running.Running.Time_Edit",
              "Watch.Watch_Running.Running.View Alarm" 
             ]
  ParentTable=[-1,  # Setup -- parent (None)
               -1,  # Stopped -- parent (None)
               -1,  # Time Edit -- parent (None)
               -1,  # Watch -- parent (None)
               3,  # Watch.Alarm State -- parent Watch
               4,  # Watch.Alarm State.Alarm Set -- parent Watch.Alarm State
               4,  # Watch.Alarm State.Alarm Unset -- parent Watch.Alarm State
               4,  # Watch.Alarm State.Alarming -- parent Watch.Alarm State
               3,  # Watch.Alarming State -- parent Watch
               8,  # Watch.Alarming State.Alarm Off -- parent Watch.Alarming State
               8,  # Watch.Alarming State.Light Off -- parent Watch.Alarming State
               8,  # Watch.Alarming State.Light On -- parent Watch.Alarming State
               3,  # Watch.Chrono State -- parent Watch
               12,  # Watch.Chrono State.Chrono_On -- parent Watch.Chrono State
               13,  # Watch.Chrono State.Chrono_On.Paused -- parent Watch.Chrono State.Chrono_On
               13,  # Watch.Chrono State.Chrono_On.Running -- parent Watch.Chrono State.Chrono_On
               12,  # Watch.Chrono State.Reset -- parent Watch.Chrono State
               3,  # Watch.Clock State -- parent Watch
               17,  # Watch.Clock State.Update -- parent Watch.Clock State
               17,  # Watch.Clock State.Wait -- parent Watch.Clock State
               3,  # Watch.Indiglo -- parent Watch
               20,  # Watch.Indiglo.Indiglo_Off -- parent Watch.Indiglo
               20,  # Watch.Indiglo.Pressed -- parent Watch.Indiglo
               20,  # Watch.Indiglo.Waiting -- parent Watch.Indiglo
               3,  # Watch.Watch_Running -- parent Watch
               24,  # Watch.Watch_Running.Running -- parent Watch.Watch_Running
               25,  # Watch.Watch_Running.Running.Alarm Edit -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Alarm Increase -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Alarm Increase Auto -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Chrono -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Next_Select_Alarm -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Next_Select_Time -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Time -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Time Increase -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Time Increase Auto -- parent Watch.Watch_Running.Running
               25,  # Watch.Watch_Running.Running.Time_Edit -- parent Watch.Watch_Running.Running
               25   # Watch.Watch_Running.Running.View Alarm -- parent Watch.Watch_Running.Running
              ]
  HistoryStateTable=[0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0,
                     0 
                    ]
  LeafStateTable=["Setup",
                  "Stopped",
                  "Time Edit",
                  None,
                  None,
                  "Watch.Alarm State.Alarm Set",
                  "Watch.Alarm State.Alarm Unset",
                  "Watch.Alarm State.Alarming",
                  None,
                  "Watch.Alarming State.Alarm Off",
                  "Watch.Alarming State.Light Off",
                  "Watch.Alarming State.Light On",
                  None,
                  None,
                  "Watch.Chrono State.Chrono_On.Paused",
                  "Watch.Chrono State.Chrono_On.Running",
                  "Watch.Chrono State.Reset",
                  None,
                  "Watch.Clock State.Update",
                  "Watch.Clock State.Wait",
                  None,
                  "Watch.Indiglo.Indiglo_Off",
                  "Watch.Indiglo.Pressed",
                  "Watch.Indiglo.Waiting",
                  None,
                  None,
                  "Watch.Watch_Running.Running.Alarm Edit",
                  "Watch.Watch_Running.Running.Alarm Increase",
                  "Watch.Watch_Running.Running.Alarm Increase Auto",
                  "Watch.Watch_Running.Running.Chrono",
                  "Watch.Watch_Running.Running.Next_Select_Alarm",
                  "Watch.Watch_Running.Running.Next_Select_Time",
                  "Watch.Watch_Running.Running.Time",
                  "Watch.Watch_Running.Running.Time Increase",
                  "Watch.Watch_Running.Running.Time Increase Auto",
                  "Watch.Watch_Running.Running.Time_Edit",
                  "Watch.Watch_Running.Running.View Alarm" 
                 ]
  OrthogonalInBetween=[[0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 
                      ]
  OrthogonalTable=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 
                  ]
  IntervalTable=["3",
                 "1",
                 "0.25",
                 "1",
                 "5",
                 "5",
                 "0.25",
                 "0.25",
                 "1",
                 "8",
                 "0.01",
                 "2",
                 "1.5",
                 "2",
                 "1.5",
                 "2",
                 "0.25",
                 "2",
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None,
                 None 
                ]
  RescheduleTable=[23,
                   18,
                   34,
                   32,
                   26,
                   2,
                   11,
                   10,
                   5,
                   7,
                   15,
                   31,
                   36,
                   30,
                   35,
                   27,
                   28,
                   33,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1,
                   -1 
                  ]
  Hierarchy=[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Setup
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Stopped
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Time Edit
             [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # substates of state Watch
             [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarm State
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarm State.Alarm Set
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarm State.Alarm Unset
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarm State.Alarming
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarming State
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarming State.Alarm Off
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarming State.Light Off
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Alarming State.Light On
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Chrono State
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Chrono State.Chrono_On
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Chrono State.Chrono_On.Paused
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Chrono State.Chrono_On.Running
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Chrono State.Reset
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Clock State
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Clock State.Update
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Clock State.Wait
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Indiglo
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Indiglo.Indiglo_Off
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Indiglo.Pressed
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Indiglo.Waiting
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # substates of state Watch.Watch_Running
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],  # substates of state Watch.Watch_Running.Running
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Alarm Edit
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Alarm Increase
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Alarm Increase Auto
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Chrono
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Next_Select_Alarm
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Next_Select_Time
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Time
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Time Increase
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Time Increase Auto
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  # substates of state Watch.Watch_Running.Running.Time_Edit
             [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]   # substates of state Watch.Watch_Running.Running.View Alarm
            ]
  CommonStateTable=[[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                    [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
                    [-1, -1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 12, 12, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 12, 13, 13, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 13, 13, 13, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 13, 13, 13, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 12, 12, 12, 12, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 17, 17, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 17, 17, 17, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 17, 17, 17, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 20, 20, 20, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 20, 20, 20, 20, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 20, 20, 20, 20, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 20, 20, 20, 20, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
                    [-1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25] 
                   ]
  Description=None

  ##Lock=thread.allocate_lock()
  CurrentModel=None

  def __init__(self, Interpreter=None, Parent=None, OldInstance=None):

    # Variables
    self.Parent=Parent
    self.HistoryCount=0
    self.state=None
    self.BackState=None
    if OldInstance!=None:
      self.Submodels=OldInstance.Submodels
    else:
      self.Submodels=[]
      for i in range(DigitalWatchStatechart.StateNum):
        self.Submodels.append(None)
    self.history=[]
    for i in range(DigitalWatchStatechart.StateNum):
      self.history.append(None)

    # Constructor
    for i in range(DigitalWatchStatechart.StateNum):
      self.history[i]=History()
      self.history[i].States=[]
      self.history[i].Times=[]
      for j in range(DigitalWatchStatechart.StateNum):
        self.history[i].States.append(-1)
        self.history[i].Times.append(-1)

    self.TimedTransitions=[] # used only when --ext is set
    for i in range(DigitalWatchStatechart.StateNum):
      self.TimedTransitions.append(None)

    self.clearEnteredStates()
    self.HasInteractor=0

    # Interpreter of action code
    if self.Parent==None:  # Top-level model
      if Interpreter:
        self.DefaultInterpreter=Interpreter
      else:
        self.DefaultInterpreter=InteractiveInterpreter()
      self.setupInterpreter()

      ##self.EventsCond=threading.Condition()
      ##self.SchedulerCond=threading.Condition()
      self.Schedules=[]
      self.PendingEvents=None
      self.PendingEventsTail=None
    else:
      self.DefaultInterpreter=Interpreter
    self.Started=0
    self.Stopped=0

    self.description=DigitalWatchStatechart.Description

  # Methods
  def isParent(self, sp, sc):

    return sc>=0 and (sp<0 or DigitalWatchStatechart.Hierarchy[sp][sc])

  def isInState(self, s, check_substate=1, use_backup=1):

    if isinstance(s, int):
      if use_backup:
        st=self.BackState
      else:
        st=self.state
      while st!=None:
        if st.StateID==s or (check_substate and self.isParent(s, st.StateID)):
          return 1
        else:
          st=st.Next
      return 0

    elif isinstance(s, str):
      i=0
      while i<DigitalWatchStatechart.StateNum:
        if s==DigitalWatchStatechart.StateNames[i]:
          return self.isInState(i, check_substate, use_backup)
        i=i+1
      i=0
      while i<DigitalWatchStatechart.StateNum:
        stname=DigitalWatchStatechart.StateNames[i]
        if self.Submodels[i]!=None and startsWith(s, stname+"."):
          pos=len(stname)+1
          SubmodelState=s[pos:]
          return self.isInState(i, 0, use_backup) and self.Submodels[i].isInState(SubmodelState, check_substate, use_backup);
        i=i+1
      return 0

    else:
      return 0

  class main_callable:
    def __call__(self, argv):
      model=DigitalWatchStatechart()
      cmd=""
      model.initModel()
      if model.HasInteractor:
        model.runInteractor()
      else:
        ##cond=thread.allocate_lock()
        while cmd!="exit":
          sys.__stdout__.write(model.getCurrentState()+" > ")
          cmd=string.strip(sys.__stdin__.readline())
          if cmd=="exit":
            break
          if not model.Stopped:
            ##cond.acquire()
            ##model.event(cmd, [], cond)
            model.event(cmd, [])
            ##cond.acquire()
            ##cond.release()
      model.runFinalizer()
  main=main_callable()

  def initModel(self, run_initializer=1, run_enter_actions=1, TkInstance = None ):

    self.clearEnteredStates()
    if self.Parent==None and DigitalWatchStatechart.Description!=None:
      sys.__stdout__.write(DigitalWatchStatechart.Description+"\n")
    self.addInState(0) # init state "Setup"
    self.recordEnteredState(0)
    self.addInState(6) # init state "Watch.Alarm State.Alarm Unset"
    self.recordEnteredState(3)
    self.recordEnteredState(4)
    self.recordEnteredState(6)
    self.addInState(9) # init state "Watch.Alarming State.Alarm Off"
    self.recordEnteredState(3)
    self.recordEnteredState(8)
    self.recordEnteredState(9)
    self.addInState(16) # init state "Watch.Chrono State.Reset"
    self.recordEnteredState(3)
    self.recordEnteredState(12)
    self.recordEnteredState(16)
    self.addInState(18) # init state "Watch.Clock State.Update"
    self.recordEnteredState(3)
    self.recordEnteredState(17)
    self.recordEnteredState(18)
    self.addInState(21) # init state "Watch.Indiglo.Indiglo_Off"
    self.recordEnteredState(3)
    self.recordEnteredState(20)
    self.recordEnteredState(21)
    self.addInState(32) # init state "Watch.Watch_Running.Running.Time"
    self.recordEnteredState(3)
    self.recordEnteredState(24)
    self.recordEnteredState(25)
    self.recordEnteredState(32)
    if run_initializer:
      self.runInitializer()
    if not self.HasInteractor:
      self.start(None, run_enter_actions, TkInstance )

  def applyMask(self, mask, dest):

    i=0
    while i<DigitalWatchStatechart.StateNum:
      dest[i]=dest[i] and mask[i]
      i=i+1

  def handleEvent(self, se, params=[], cond=None, scheduler=None):

    if not self.Started:
      if cond:
        cond.release()
      return 0
    self.params=params
    handled=0
    table=[]
    i=0
    while i<DigitalWatchStatechart.StateNum:
      table.append(1)
      i=i+1
    if self.state:
      self.BackState=self.state.copy()
    else:
      self.BackState=None
    e=self.eventStr2Int(se)
    if e==0: # event "__INTERNAL_0_TIME_0"
      if table[23] and self.isInState(23) and self.testCondition(0):
        if (scheduler==self or scheduler==None) and table[23]:
          self.runActionCode(2) # output action(s)
          self.runExitActionsForStates(20)
	  self.clearEnteredStates()
          self.changeState(23, 21)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[23], table)
          handled=1
    elif e==1: # event "__INTERNAL_0_TIME_1"
      if table[18] and self.isInState(18) and self.testCondition(1):
        if (scheduler==self or scheduler==None) and table[18]:
          self.runActionCode(3) # output action(s)
          self.runExitActionsForStates(17)
	  self.clearEnteredStates()
          self.changeState(18, 18)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[18], table)
          handled=1
    elif e==2: # event "__INTERNAL_0_TIME_10"
      if table[34] and self.isInState(34) and self.testCondition(2):
        if (scheduler==self or scheduler==None) and table[34]:
          self.runActionCode(4) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(34, 34)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[34], table)
          handled=1
    elif e==3: # event "__INTERNAL_0_TIME_11"
      if table[32] and self.isInState(32) and self.testCondition(3):
        if (scheduler==self or scheduler==None) and table[32]:
          self.runActionCode(5) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(32, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[32], table)
          handled=1
    elif e==4: # event "__INTERNAL_0_TIME_12"
      if table[26] and self.isInState(26) and self.testCondition(4):
        if (scheduler==self or scheduler==None) and table[26]:
          self.runActionCode(6) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(26, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[26], table)
          handled=1
    elif e==5: # event "__INTERNAL_0_TIME_13"
      if table[2] and self.isInState(2) and self.testCondition(5):
        if (scheduler==self or scheduler==None) and table[2]:
          self.runActionCode(7) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(2, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[2], table)
          handled=1
    elif e==6: # event "__INTERNAL_0_TIME_14"
      if table[11] and self.isInState(11) and self.testCondition(6):
        if (scheduler==self or scheduler==None) and table[11]:
          self.runActionCode(8) # output action(s)
          self.runExitActionsForStates(8)
	  self.clearEnteredStates()
          self.changeState(11, 10)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[11], table)
          handled=1
    elif e==7: # event "__INTERNAL_0_TIME_15"
      if table[10] and self.isInState(10) and self.testCondition(7):
        if (scheduler==self or scheduler==None) and table[10]:
          self.runActionCode(9) # output action(s)
          self.runExitActionsForStates(8)
	  self.clearEnteredStates()
          self.changeState(10, 11)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[10], table)
          handled=1
    elif e==8: # event "__INTERNAL_0_TIME_16"
      if table[5] and self.isInState(5) and self.testCondition(8):
        if (scheduler==self or scheduler==None) and table[5]:
          self.runActionCode(10) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(5, 5)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[5], table)
          handled=1
    elif e==9: # event "__INTERNAL_0_TIME_17"
      if table[7] and self.isInState(7) and self.testCondition(9):
        if (scheduler==self or scheduler==None) and table[7]:
          self.runActionCode(11) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(7, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[7], table)
          handled=1
    elif e==10: # event "__INTERNAL_0_TIME_2"
      if table[15] and self.isInState(15) and self.testCondition(10):
        if (scheduler==self or scheduler==None) and table[15]:
          self.runActionCode(12) # output action(s)
          self.runExitActionsForStates(13)
	  self.clearEnteredStates()
          self.changeState(15, 15)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[15], table)
          handled=1
    elif e==11: # event "__INTERNAL_0_TIME_3"
      if table[31] and self.isInState(31) and self.testCondition(11):
        if (scheduler==self or scheduler==None) and table[31]:
          self.runActionCode(13) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(31, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[31], table)
          handled=1
    elif e==12: # event "__INTERNAL_0_TIME_4"
      if table[36] and self.isInState(36) and self.testCondition(12):
        if (scheduler==self or scheduler==None) and table[36]:
          self.runActionCode(14) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(36, 26)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[36], table)
          handled=1
    elif e==13: # event "__INTERNAL_0_TIME_5"
      if table[30] and self.isInState(30) and self.testCondition(13):
        if (scheduler==self or scheduler==None) and table[30]:
          self.runActionCode(15) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(30, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[30], table)
          handled=1
    elif e==14: # event "__INTERNAL_0_TIME_6"
      if table[35] and self.isInState(35) and self.testCondition(14):
        if (scheduler==self or scheduler==None) and table[35]:
          self.runActionCode(16) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(35, 2)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[35], table)
          handled=1
    elif e==15: # event "__INTERNAL_0_TIME_7"
      if table[27] and self.isInState(27) and self.testCondition(15):
        if (scheduler==self or scheduler==None) and table[27]:
          self.runActionCode(17) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(27, 28)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[27], table)
          handled=1
    elif e==16: # event "__INTERNAL_0_TIME_8"
      if table[28] and self.isInState(28) and self.testCondition(16):
        if (scheduler==self or scheduler==None) and table[28]:
          self.runActionCode(18) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(28, 28)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[28], table)
          handled=1
    elif e==17: # event "__INTERNAL_0_TIME_9"
      if table[33] and self.isInState(33) and self.testCondition(17):
        if (scheduler==self or scheduler==None) and table[33]:
          self.runActionCode(19) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(33, 34)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[33], table)
          handled=1
    elif e==18: # event "alarmStart"
      if table[9] and self.isInState(9) and self.testCondition(18):
        if (scheduler==self or scheduler==None) and table[9]:
          self.runActionCode(20) # output action(s)
          self.runExitActionsForStates(8)
	  self.clearEnteredStates()
          self.changeState(9, 11)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[9], table)
          handled=1
      if table[5] and self.isInState(5) and self.testCondition(19):
        if (scheduler==self or scheduler==None) and table[5]:
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(5, 7)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[5], table)
          handled=1
    elif e==19: # event "alarmStop"
      if table[11] and self.isInState(11) and self.testCondition(20):
        if (scheduler==self or scheduler==None) and table[11]:
          self.runActionCode(21) # output action(s)
          self.runExitActionsForStates(8)
	  self.clearEnteredStates()
          self.changeState(11, 9)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[11], table)
          handled=1
      if table[10] and self.isInState(10) and self.testCondition(21):
        if (scheduler==self or scheduler==None) and table[10]:
          self.runActionCode(22) # output action(s)
          self.runExitActionsForStates(8)
	  self.clearEnteredStates()
          self.changeState(10, 9)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[10], table)
          handled=1
    elif e==20: # event "bottomLeftPressed"
      if table[29] and self.isInState(29) and self.testCondition(22):
        if (scheduler==self or scheduler==None) and table[29]:
          self.runActionCode(23) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(29, 29)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[29], table)
          handled=1
      if table[32] and self.isInState(32) and self.testCondition(23):
        if (scheduler==self or scheduler==None) and table[32]:
          self.runActionCode(24) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(32, 36)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[32], table)
          handled=1
      if table[26] and self.isInState(26) and self.testCondition(24):
        if (scheduler==self or scheduler==None) and table[26]:
          self.runActionCode(25) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(26, 27)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[26], table)
          handled=1
      if table[2] and self.isInState(2) and self.testCondition(25):
        if (scheduler==self or scheduler==None) and table[2]:
          self.runActionCode(26) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(2, 33)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[2], table)
          handled=1
      if table[7] and self.isInState(7) and self.testCondition(26):
        if (scheduler==self or scheduler==None) and table[7]:
          self.runActionCode(27) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(7, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[7], table)
          handled=1
    elif e==21: # event "bottomLeftReleased"
      if table[36] and self.isInState(36) and self.testCondition(27):
        if (scheduler==self or scheduler==None) and table[36]:
          self.runActionCode(28) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(36, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[36], table)
          handled=1
      if table[28] and self.isInState(28) and self.testCondition(28):
        if (scheduler==self or scheduler==None) and table[28]:
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(28, 26)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[28], table)
          handled=1
      if table[27] and self.isInState(27) and self.testCondition(29):
        if (scheduler==self or scheduler==None) and table[27]:
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(27, 26)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[27], table)
          handled=1
      if table[33] and self.isInState(33) and self.testCondition(30):
        if (scheduler==self or scheduler==None) and table[33]:
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(33, 2)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[33], table)
          handled=1
      if table[34] and self.isInState(34) and self.testCondition(31):
        if (scheduler==self or scheduler==None) and table[34]:
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(34, 2)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[34], table)
          handled=1
    elif e==22: # event "bottomRightPressed"
      if table[29] and self.isInState(29) and self.testCondition(32):
        if (scheduler==self or scheduler==None) and table[29]:
          self.runActionCode(29) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(29, 29)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[29], table)
          handled=1
      if table[32] and self.isInState(32) and self.testCondition(33):
        if (scheduler==self or scheduler==None) and table[32]:
          self.runActionCode(30) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(32, 35)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[32], table)
          handled=1
      if table[26] and self.isInState(26) and self.testCondition(34):
        if (scheduler==self or scheduler==None) and table[26]:
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(26, 30)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[26], table)
          handled=1
      if table[2] and self.isInState(2) and self.testCondition(35):
        if (scheduler==self or scheduler==None) and table[2]:
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(2, 31)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[2], table)
          handled=1
      if table[7] and self.isInState(7) and self.testCondition(36):
        if (scheduler==self or scheduler==None) and table[7]:
          self.runActionCode(31) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(7, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[7], table)
          handled=1
    elif e==23: # event "bottomRightReleased"
      if table[35] and self.isInState(35) and self.testCondition(37):
        if (scheduler==self or scheduler==None) and table[35]:
          self.runActionCode(32) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(35, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[35], table)
          handled=1
      if table[30] and self.isInState(30) and self.testCondition(38):
        if (scheduler==self or scheduler==None) and table[30]:
          self.runActionCode(33) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(30, 26)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[30], table)
          handled=1
      if table[31] and self.isInState(31) and self.testCondition(39):
        if (scheduler==self or scheduler==None) and table[31]:
          self.runActionCode(34) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(31, 2)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[31], table)
          handled=1
    elif e==24: # event "chronoDisplay"
      if table[29] and self.isInState(29) and self.testCondition(40):
        if (scheduler==self or scheduler==None) and table[29]:
          self.runActionCode(35) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(29, 29)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[29], table)
          handled=1
    elif e==25: # event "resetChrono"
      if table[13] and self.isInState(13) and self.testCondition(41):
        if (scheduler==self or scheduler==None) and table[13]:
          self.runActionCode(36) # output action(s)
          self.runExitActionsForStates(12)
	  self.clearEnteredStates()
          self.changeState(13, 16)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[13], table)
          handled=1
    elif e==26: # event "setAlarm"
      if table[6] and self.isInState(6) and self.testCondition(42):
        if (scheduler==self or scheduler==None) and table[6]:
          self.runActionCode(37) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(6, 5)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[6], table)
          handled=1
      if table[5] and self.isInState(5) and self.testCondition(43):
        if (scheduler==self or scheduler==None) and table[5]:
          self.runActionCode(38) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(5, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[5], table)
          handled=1
    elif e==27: # event "start"
      if table[0] and self.isInState(0) and self.testCondition(44):
        if (scheduler==self or scheduler==None) and table[0]:
          self.runActionCode(39) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(0, 3)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[0], table)
          handled=1
    elif e==28: # event "stop"
      if table[3] and self.isInState(3) and self.testCondition(45):
        if (scheduler==self or scheduler==None) and table[3]:
          self.runActionCode(40) # output action(s)
          self.runExitActionsForStates(-1)
	  self.clearEnteredStates()
          self.changeState(3, 1)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[3], table)
          handled=1
    elif e==29: # event "timePause"
      if table[18] and self.isInState(18) and self.testCondition(46):
        if (scheduler==self or scheduler==None) and table[18]:
          self.runActionCode(41) # output action(s)
          self.runExitActionsForStates(17)
	  self.clearEnteredStates()
          self.changeState(18, 19)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[18], table)
          handled=1
    elif e==30: # event "timeStart"
      if table[19] and self.isInState(19) and self.testCondition(47):
        if (scheduler==self or scheduler==None) and table[19]:
          self.runActionCode(42) # output action(s)
          self.runExitActionsForStates(17)
	  self.clearEnteredStates()
          self.changeState(19, 18)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[19], table)
          handled=1
    elif e==31: # event "toggleChrono"
      if table[15] and self.isInState(15) and self.testCondition(48):
        if (scheduler==self or scheduler==None) and table[15]:
          self.runActionCode(43) # output action(s)
          self.runExitActionsForStates(13)
	  self.clearEnteredStates()
          self.changeState(15, 14)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[15], table)
          handled=1
      if table[14] and self.isInState(14) and self.testCondition(49):
        if (scheduler==self or scheduler==None) and table[14]:
          self.runActionCode(44) # output action(s)
          self.runExitActionsForStates(13)
	  self.clearEnteredStates()
          self.changeState(14, 15)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[14], table)
          handled=1
      if table[16] and self.isInState(16) and self.testCondition(50):
        if (scheduler==self or scheduler==None) and table[16]:
          self.runExitActionsForStates(12)
	  self.clearEnteredStates()
          self.changeState(16, 13)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[16], table)
          handled=1
    elif e==32: # event "topLeftPressed"
      if table[32] and self.isInState(32) and self.testCondition(51):
        if (scheduler==self or scheduler==None) and table[32]:
          self.runActionCode(45) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(32, 29)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[32], table)
          handled=1
      if table[29] and self.isInState(29) and self.testCondition(52):
        if (scheduler==self or scheduler==None) and table[29]:
          self.runActionCode(46) # output action(s)
          self.runExitActionsForStates(25)
	  self.clearEnteredStates()
          self.changeState(29, 32)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[29], table)
          handled=1
      if table[7] and self.isInState(7) and self.testCondition(53):
        if (scheduler==self or scheduler==None) and table[7]:
          self.runActionCode(47) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(7, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[7], table)
          handled=1
    elif e==33: # event "topRightPressed"
      if table[21] and self.isInState(21) and self.testCondition(54):
        if (scheduler==self or scheduler==None) and table[21]:
          self.runActionCode(48) # output action(s)
          self.runExitActionsForStates(20)
	  self.clearEnteredStates()
          self.changeState(21, 22)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[21], table)
          handled=1
      if table[23] and self.isInState(23) and self.testCondition(55):
        if (scheduler==self or scheduler==None) and table[23]:
          self.runActionCode(49) # output action(s)
          self.runExitActionsForStates(20)
	  self.clearEnteredStates()
          self.changeState(23, 22)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[23], table)
          handled=1
      if table[7] and self.isInState(7) and self.testCondition(56):
        if (scheduler==self or scheduler==None) and table[7]:
          self.runActionCode(50) # output action(s)
          self.runExitActionsForStates(4)
	  self.clearEnteredStates()
          self.changeState(7, 6)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[7], table)
          handled=1
    elif e==34: # event "topRightReleased"
      if table[22] and self.isInState(22) and self.testCondition(57):
        if (scheduler==self or scheduler==None) and table[22]:
          self.runActionCode(51) # output action(s)
          self.runExitActionsForStates(20)
	  self.clearEnteredStates()
          self.changeState(22, 23)
          self.runEnterActionsForStates(self.StatesEntered, 1)
          self.applyMask(DigitalWatchStatechart.OrthogonalTable[22], table)
          handled=1
    if cond and self.Parent==None:  # Top-level model
      cond.release()
    if not handled and e>=0 and (scheduler==self or scheduler==None) and DigitalWatchStatechart.RescheduleTable[e]>=0:
      self.addSchedule(DigitalWatchStatechart.RescheduleTable[e], DigitalWatchStatechart.IntervalTable[e], DigitalWatchStatechart.EventNames[e], scheduler)
    return handled

  def forceIntoState(self, s):

    changed=0
    s2=self.state
    while s2!=None:
      HasCommonParent=0
      for i in range(DigitalWatchStatechart.StateNum):
        if self.isParent(i, s2.StateID) and self.isParent(i, s):
          HasCommonParent=1
          if not self.hasOrthogonalStateInBetween(i, s2.StateID):
            self.changeState(s2.StateID, s)
            changed=1
      if not HasCommonParent:
        self.changeState(s2.StateID, s)
        changed=1
      s2=s2.Next
    if not changed:
      self.addInState(s)

  def changeState(self, s1, s2, check_history=0, top_level=0):

    # t1=common(s1, s2)
    t1=DigitalWatchStatechart.CommonStateTable[s1][s2]
    self.recordHistory(t1)
    if t1>=0:
      self.removeOutStates(t1)
    else:
      self.state=None
    # t2=history(s2)
    t2=DigitalWatchStatechart.HistoryStateTable[s2]
    if t2==0: # no history
      self.generateStates(t1, s2)
    elif t2==1: # normal history
      if not check_history:
        self.generateStates(t1, s2)
      elif self.hasHistoryRecorded(s2) and self.Submodels[s2]==None:
        self.generateStates(t1, self.history[s2].States[s2])
      else:
        self.generateStates(t1, s2, 1)
    elif t2==2: # deep history
      if check_history and self.hasHistoryRecorded(s2):
        if self.Submodels[s2]:
          self.recordEnteredState(s2, 1, 1, t1)
          self.addInState(s2)
        else:
          for i in range(DigitalWatchStatechart.StateNum):
            hs=self.history[s2].States[i]
            if hs>=0 and self.isLeafState(hs):
              self.recordEnteredState(hs, 1, 1, t1)
              self.addInState(hs)
      else:
        self.generateStates(t1, s2)

  def addInState(self, s):

    if not self.isInState(s, 1, 0):
      st=State()
      st.StateID=s
      st.Next=self.state
      self.state=st
      return 1
    else:
      return 0

  def generateStates(self, common, dest, history_type=0):

    if common==-1:
      if dest==0:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(0):
            self.recordEnteredState(0)
            self.addInState(0)  # move into leaf state "Setup"
      elif dest==1:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(1):
            self.recordEnteredState(1)
            self.addInState(1)  # move into leaf state "Stopped"
      elif dest==2:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(2):
            self.recordEnteredState(2)
            self.addInState(2)  # move into leaf state "Time Edit"
      elif dest==3:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==4:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==5:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(5):
                self.recordEnteredState(5)
                self.addInState(5)  # move into leaf state "Watch.Alarm State.Alarm Set"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==6:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==7:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(7):
                self.recordEnteredState(7)
                self.addInState(7)  # move into leaf state "Watch.Alarm State.Alarming"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==8:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==9:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==10:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(10):
                self.recordEnteredState(10)
                self.addInState(10)  # move into leaf state "Watch.Alarming State.Light Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==11:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(11):
                self.recordEnteredState(11)
                self.addInState(11)  # move into leaf state "Watch.Alarming State.Light On"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==12:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==13:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(13):
                self.recordEnteredState(13)
                if history_type!=2 or self.check_history(15):
                  self.recordEnteredState(15)
                  self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==14:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(13):
                self.recordEnteredState(13)
                if history_type!=2 or self.check_history(14):
                  self.recordEnteredState(14)
                  self.addInState(14)  # move into leaf state "Watch.Chrono State.Chrono_On.Paused"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==15:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(13):
                self.recordEnteredState(13)
                if history_type!=2 or self.check_history(15):
                  self.recordEnteredState(15)
                  self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==16:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==17:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==18:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==19:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(19):
                self.recordEnteredState(19)
                self.addInState(19)  # move into leaf state "Watch.Clock State.Wait"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==20:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==21:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==22:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(22):
                self.recordEnteredState(22)
                self.addInState(22)  # move into leaf state "Watch.Indiglo.Pressed"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==23:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(23):
                self.recordEnteredState(23)
                self.addInState(23)  # move into leaf state "Watch.Indiglo.Waiting"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==24:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==25:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==26:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(26):
                  self.recordEnteredState(26)
                  self.addInState(26)  # move into leaf state "Watch.Watch_Running.Running.Alarm Edit"
      elif dest==27:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(27):
                  self.recordEnteredState(27)
                  self.addInState(27)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase"
      elif dest==28:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(28):
                  self.recordEnteredState(28)
                  self.addInState(28)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase Auto"
      elif dest==29:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(29):
                  self.recordEnteredState(29)
                  self.addInState(29)  # move into leaf state "Watch.Watch_Running.Running.Chrono"
      elif dest==30:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(30):
                  self.recordEnteredState(30)
                  self.addInState(30)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Alarm"
      elif dest==31:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(31):
                  self.recordEnteredState(31)
                  self.addInState(31)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Time"
      elif dest==32:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(32):
                  self.recordEnteredState(32)
                  self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==33:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(33):
                  self.recordEnteredState(33)
                  self.addInState(33)  # move into leaf state "Watch.Watch_Running.Running.Time Increase"
      elif dest==34:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(34):
                  self.recordEnteredState(34)
                  self.addInState(34)  # move into leaf state "Watch.Watch_Running.Running.Time Increase Auto"
      elif dest==35:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(35):
                  self.recordEnteredState(35)
                  self.addInState(35)  # move into leaf state "Watch.Watch_Running.Running.Time_Edit"
      elif dest==36:
        if history_type!=2 or self.check_history(-1):
          if history_type!=2 or self.check_history(3):
            self.recordEnteredState(3)
            if history_type!=2 or self.check_history(4):
              self.recordEnteredState(4)
              if history_type!=2 or self.check_history(6):
                self.recordEnteredState(6)
                self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
            if history_type!=2 or self.check_history(8):
              self.recordEnteredState(8)
              if history_type!=2 or self.check_history(9):
                self.recordEnteredState(9)
                self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
            if history_type!=2 or self.check_history(12):
              self.recordEnteredState(12)
              if history_type!=2 or self.check_history(16):
                self.recordEnteredState(16)
                self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
            if history_type!=2 or self.check_history(17):
              self.recordEnteredState(17)
              if history_type!=2 or self.check_history(18):
                self.recordEnteredState(18)
                self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
            if history_type!=2 or self.check_history(20):
              self.recordEnteredState(20)
              if history_type!=2 or self.check_history(21):
                self.recordEnteredState(21)
                self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
            if history_type!=2 or self.check_history(24):
              self.recordEnteredState(24)
              if history_type!=2 or self.check_history(25):
                self.recordEnteredState(25)
                if history_type!=2 or self.check_history(36):
                  self.recordEnteredState(36)
                  self.addInState(36)  # move into leaf state "Watch.Watch_Running.Running.View Alarm"
    elif common==0:
      if dest==0:
        if history_type!=2 or self.check_history(0):
          self.addInState(0)  # move into leaf state "Setup"
    elif common==1:
      if dest==1:
        if history_type!=2 or self.check_history(1):
          self.addInState(1)  # move into leaf state "Stopped"
    elif common==2:
      if dest==2:
        if history_type!=2 or self.check_history(2):
          self.addInState(2)  # move into leaf state "Time Edit"
    elif common==3:
      if dest==3:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==4:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==5:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(5):
              self.recordEnteredState(5)
              self.addInState(5)  # move into leaf state "Watch.Alarm State.Alarm Set"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==6:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==7:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(7):
              self.recordEnteredState(7)
              self.addInState(7)  # move into leaf state "Watch.Alarm State.Alarming"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==8:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==9:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==10:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(10):
              self.recordEnteredState(10)
              self.addInState(10)  # move into leaf state "Watch.Alarming State.Light Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==11:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(11):
              self.recordEnteredState(11)
              self.addInState(11)  # move into leaf state "Watch.Alarming State.Light On"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==12:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==13:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(13):
              self.recordEnteredState(13)
              if history_type!=2 or self.check_history(15):
                self.recordEnteredState(15)
                self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==14:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(13):
              self.recordEnteredState(13)
              if history_type!=2 or self.check_history(14):
                self.recordEnteredState(14)
                self.addInState(14)  # move into leaf state "Watch.Chrono State.Chrono_On.Paused"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==15:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(13):
              self.recordEnteredState(13)
              if history_type!=2 or self.check_history(15):
                self.recordEnteredState(15)
                self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==16:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==17:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==18:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==19:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(19):
              self.recordEnteredState(19)
              self.addInState(19)  # move into leaf state "Watch.Clock State.Wait"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==20:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==21:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==22:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(22):
              self.recordEnteredState(22)
              self.addInState(22)  # move into leaf state "Watch.Indiglo.Pressed"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==23:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(23):
              self.recordEnteredState(23)
              self.addInState(23)  # move into leaf state "Watch.Indiglo.Waiting"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==24:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==25:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==26:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(26):
                self.recordEnteredState(26)
                self.addInState(26)  # move into leaf state "Watch.Watch_Running.Running.Alarm Edit"
      elif dest==27:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(27):
                self.recordEnteredState(27)
                self.addInState(27)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase"
      elif dest==28:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(28):
                self.recordEnteredState(28)
                self.addInState(28)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase Auto"
      elif dest==29:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(29):
                self.recordEnteredState(29)
                self.addInState(29)  # move into leaf state "Watch.Watch_Running.Running.Chrono"
      elif dest==30:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(30):
                self.recordEnteredState(30)
                self.addInState(30)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Alarm"
      elif dest==31:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(31):
                self.recordEnteredState(31)
                self.addInState(31)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Time"
      elif dest==32:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(32):
                self.recordEnteredState(32)
                self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==33:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(33):
                self.recordEnteredState(33)
                self.addInState(33)  # move into leaf state "Watch.Watch_Running.Running.Time Increase"
      elif dest==34:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(34):
                self.recordEnteredState(34)
                self.addInState(34)  # move into leaf state "Watch.Watch_Running.Running.Time Increase Auto"
      elif dest==35:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(35):
                self.recordEnteredState(35)
                self.addInState(35)  # move into leaf state "Watch.Watch_Running.Running.Time_Edit"
      elif dest==36:
        if history_type!=2 or self.check_history(3):
          if history_type!=2 or self.check_history(4):
            self.recordEnteredState(4)
            if history_type!=2 or self.check_history(6):
              self.recordEnteredState(6)
              self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
          if history_type!=2 or self.check_history(8):
            self.recordEnteredState(8)
            if history_type!=2 or self.check_history(9):
              self.recordEnteredState(9)
              self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
          if history_type!=2 or self.check_history(12):
            self.recordEnteredState(12)
            if history_type!=2 or self.check_history(16):
              self.recordEnteredState(16)
              self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
          if history_type!=2 or self.check_history(17):
            self.recordEnteredState(17)
            if history_type!=2 or self.check_history(18):
              self.recordEnteredState(18)
              self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
          if history_type!=2 or self.check_history(20):
            self.recordEnteredState(20)
            if history_type!=2 or self.check_history(21):
              self.recordEnteredState(21)
              self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
          if history_type!=2 or self.check_history(24):
            self.recordEnteredState(24)
            if history_type!=2 or self.check_history(25):
              self.recordEnteredState(25)
              if history_type!=2 or self.check_history(36):
                self.recordEnteredState(36)
                self.addInState(36)  # move into leaf state "Watch.Watch_Running.Running.View Alarm"
    elif common==4:
      if dest==4:
        if history_type!=2 or self.check_history(4):
          if history_type!=2 or self.check_history(6):
            self.recordEnteredState(6)
            self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
      elif dest==5:
        if history_type!=2 or self.check_history(4):
          if history_type!=2 or self.check_history(5):
            self.recordEnteredState(5)
            self.addInState(5)  # move into leaf state "Watch.Alarm State.Alarm Set"
      elif dest==6:
        if history_type!=2 or self.check_history(4):
          if history_type!=2 or self.check_history(6):
            self.recordEnteredState(6)
            self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
      elif dest==7:
        if history_type!=2 or self.check_history(4):
          if history_type!=2 or self.check_history(7):
            self.recordEnteredState(7)
            self.addInState(7)  # move into leaf state "Watch.Alarm State.Alarming"
    elif common==5:
      if dest==5:
        if history_type!=2 or self.check_history(5):
          self.addInState(5)  # move into leaf state "Watch.Alarm State.Alarm Set"
    elif common==6:
      if dest==6:
        if history_type!=2 or self.check_history(6):
          self.addInState(6)  # move into leaf state "Watch.Alarm State.Alarm Unset"
    elif common==7:
      if dest==7:
        if history_type!=2 or self.check_history(7):
          self.addInState(7)  # move into leaf state "Watch.Alarm State.Alarming"
    elif common==8:
      if dest==8:
        if history_type!=2 or self.check_history(8):
          if history_type!=2 or self.check_history(9):
            self.recordEnteredState(9)
            self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
      elif dest==9:
        if history_type!=2 or self.check_history(8):
          if history_type!=2 or self.check_history(9):
            self.recordEnteredState(9)
            self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
      elif dest==10:
        if history_type!=2 or self.check_history(8):
          if history_type!=2 or self.check_history(10):
            self.recordEnteredState(10)
            self.addInState(10)  # move into leaf state "Watch.Alarming State.Light Off"
      elif dest==11:
        if history_type!=2 or self.check_history(8):
          if history_type!=2 or self.check_history(11):
            self.recordEnteredState(11)
            self.addInState(11)  # move into leaf state "Watch.Alarming State.Light On"
    elif common==9:
      if dest==9:
        if history_type!=2 or self.check_history(9):
          self.addInState(9)  # move into leaf state "Watch.Alarming State.Alarm Off"
    elif common==10:
      if dest==10:
        if history_type!=2 or self.check_history(10):
          self.addInState(10)  # move into leaf state "Watch.Alarming State.Light Off"
    elif common==11:
      if dest==11:
        if history_type!=2 or self.check_history(11):
          self.addInState(11)  # move into leaf state "Watch.Alarming State.Light On"
    elif common==12:
      if dest==12:
        if history_type!=2 or self.check_history(12):
          if history_type!=2 or self.check_history(16):
            self.recordEnteredState(16)
            self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
      elif dest==13:
        if history_type!=2 or self.check_history(12):
          if history_type!=2 or self.check_history(13):
            self.recordEnteredState(13)
            if history_type!=2 or self.check_history(15):
              self.recordEnteredState(15)
              self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
      elif dest==14:
        if history_type!=2 or self.check_history(12):
          if history_type!=2 or self.check_history(13):
            self.recordEnteredState(13)
            if history_type!=2 or self.check_history(14):
              self.recordEnteredState(14)
              self.addInState(14)  # move into leaf state "Watch.Chrono State.Chrono_On.Paused"
      elif dest==15:
        if history_type!=2 or self.check_history(12):
          if history_type!=2 or self.check_history(13):
            self.recordEnteredState(13)
            if history_type!=2 or self.check_history(15):
              self.recordEnteredState(15)
              self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
      elif dest==16:
        if history_type!=2 or self.check_history(12):
          if history_type!=2 or self.check_history(16):
            self.recordEnteredState(16)
            self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
    elif common==13:
      if dest==13:
        if history_type!=2 or self.check_history(13):
          if history_type!=2 or self.check_history(15):
            self.recordEnteredState(15)
            self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
      elif dest==14:
        if history_type!=2 or self.check_history(13):
          if history_type!=2 or self.check_history(14):
            self.recordEnteredState(14)
            self.addInState(14)  # move into leaf state "Watch.Chrono State.Chrono_On.Paused"
      elif dest==15:
        if history_type!=2 or self.check_history(13):
          if history_type!=2 or self.check_history(15):
            self.recordEnteredState(15)
            self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
    elif common==14:
      if dest==14:
        if history_type!=2 or self.check_history(14):
          self.addInState(14)  # move into leaf state "Watch.Chrono State.Chrono_On.Paused"
    elif common==15:
      if dest==15:
        if history_type!=2 or self.check_history(15):
          self.addInState(15)  # move into leaf state "Watch.Chrono State.Chrono_On.Running"
    elif common==16:
      if dest==16:
        if history_type!=2 or self.check_history(16):
          self.addInState(16)  # move into leaf state "Watch.Chrono State.Reset"
    elif common==17:
      if dest==17:
        if history_type!=2 or self.check_history(17):
          if history_type!=2 or self.check_history(18):
            self.recordEnteredState(18)
            self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
      elif dest==18:
        if history_type!=2 or self.check_history(17):
          if history_type!=2 or self.check_history(18):
            self.recordEnteredState(18)
            self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
      elif dest==19:
        if history_type!=2 or self.check_history(17):
          if history_type!=2 or self.check_history(19):
            self.recordEnteredState(19)
            self.addInState(19)  # move into leaf state "Watch.Clock State.Wait"
    elif common==18:
      if dest==18:
        if history_type!=2 or self.check_history(18):
          self.addInState(18)  # move into leaf state "Watch.Clock State.Update"
    elif common==19:
      if dest==19:
        if history_type!=2 or self.check_history(19):
          self.addInState(19)  # move into leaf state "Watch.Clock State.Wait"
    elif common==20:
      if dest==20:
        if history_type!=2 or self.check_history(20):
          if history_type!=2 or self.check_history(21):
            self.recordEnteredState(21)
            self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
      elif dest==21:
        if history_type!=2 or self.check_history(20):
          if history_type!=2 or self.check_history(21):
            self.recordEnteredState(21)
            self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
      elif dest==22:
        if history_type!=2 or self.check_history(20):
          if history_type!=2 or self.check_history(22):
            self.recordEnteredState(22)
            self.addInState(22)  # move into leaf state "Watch.Indiglo.Pressed"
      elif dest==23:
        if history_type!=2 or self.check_history(20):
          if history_type!=2 or self.check_history(23):
            self.recordEnteredState(23)
            self.addInState(23)  # move into leaf state "Watch.Indiglo.Waiting"
    elif common==21:
      if dest==21:
        if history_type!=2 or self.check_history(21):
          self.addInState(21)  # move into leaf state "Watch.Indiglo.Indiglo_Off"
    elif common==22:
      if dest==22:
        if history_type!=2 or self.check_history(22):
          self.addInState(22)  # move into leaf state "Watch.Indiglo.Pressed"
    elif common==23:
      if dest==23:
        if history_type!=2 or self.check_history(23):
          self.addInState(23)  # move into leaf state "Watch.Indiglo.Waiting"
    elif common==24:
      if dest==24:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(32):
              self.recordEnteredState(32)
              self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==25:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(32):
              self.recordEnteredState(32)
              self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==26:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(26):
              self.recordEnteredState(26)
              self.addInState(26)  # move into leaf state "Watch.Watch_Running.Running.Alarm Edit"
      elif dest==27:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(27):
              self.recordEnteredState(27)
              self.addInState(27)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase"
      elif dest==28:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(28):
              self.recordEnteredState(28)
              self.addInState(28)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase Auto"
      elif dest==29:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(29):
              self.recordEnteredState(29)
              self.addInState(29)  # move into leaf state "Watch.Watch_Running.Running.Chrono"
      elif dest==30:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(30):
              self.recordEnteredState(30)
              self.addInState(30)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Alarm"
      elif dest==31:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(31):
              self.recordEnteredState(31)
              self.addInState(31)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Time"
      elif dest==32:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(32):
              self.recordEnteredState(32)
              self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==33:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(33):
              self.recordEnteredState(33)
              self.addInState(33)  # move into leaf state "Watch.Watch_Running.Running.Time Increase"
      elif dest==34:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(34):
              self.recordEnteredState(34)
              self.addInState(34)  # move into leaf state "Watch.Watch_Running.Running.Time Increase Auto"
      elif dest==35:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(35):
              self.recordEnteredState(35)
              self.addInState(35)  # move into leaf state "Watch.Watch_Running.Running.Time_Edit"
      elif dest==36:
        if history_type!=2 or self.check_history(24):
          if history_type!=2 or self.check_history(25):
            self.recordEnteredState(25)
            if history_type!=2 or self.check_history(36):
              self.recordEnteredState(36)
              self.addInState(36)  # move into leaf state "Watch.Watch_Running.Running.View Alarm"
    elif common==25:
      if dest==25:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(32):
            self.recordEnteredState(32)
            self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==26:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(26):
            self.recordEnteredState(26)
            self.addInState(26)  # move into leaf state "Watch.Watch_Running.Running.Alarm Edit"
      elif dest==27:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(27):
            self.recordEnteredState(27)
            self.addInState(27)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase"
      elif dest==28:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(28):
            self.recordEnteredState(28)
            self.addInState(28)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase Auto"
      elif dest==29:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(29):
            self.recordEnteredState(29)
            self.addInState(29)  # move into leaf state "Watch.Watch_Running.Running.Chrono"
      elif dest==30:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(30):
            self.recordEnteredState(30)
            self.addInState(30)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Alarm"
      elif dest==31:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(31):
            self.recordEnteredState(31)
            self.addInState(31)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Time"
      elif dest==32:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(32):
            self.recordEnteredState(32)
            self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
      elif dest==33:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(33):
            self.recordEnteredState(33)
            self.addInState(33)  # move into leaf state "Watch.Watch_Running.Running.Time Increase"
      elif dest==34:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(34):
            self.recordEnteredState(34)
            self.addInState(34)  # move into leaf state "Watch.Watch_Running.Running.Time Increase Auto"
      elif dest==35:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(35):
            self.recordEnteredState(35)
            self.addInState(35)  # move into leaf state "Watch.Watch_Running.Running.Time_Edit"
      elif dest==36:
        if history_type!=2 or self.check_history(25):
          if history_type!=2 or self.check_history(36):
            self.recordEnteredState(36)
            self.addInState(36)  # move into leaf state "Watch.Watch_Running.Running.View Alarm"
    elif common==26:
      if dest==26:
        if history_type!=2 or self.check_history(26):
          self.addInState(26)  # move into leaf state "Watch.Watch_Running.Running.Alarm Edit"
    elif common==27:
      if dest==27:
        if history_type!=2 or self.check_history(27):
          self.addInState(27)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase"
    elif common==28:
      if dest==28:
        if history_type!=2 or self.check_history(28):
          self.addInState(28)  # move into leaf state "Watch.Watch_Running.Running.Alarm Increase Auto"
    elif common==29:
      if dest==29:
        if history_type!=2 or self.check_history(29):
          self.addInState(29)  # move into leaf state "Watch.Watch_Running.Running.Chrono"
    elif common==30:
      if dest==30:
        if history_type!=2 or self.check_history(30):
          self.addInState(30)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Alarm"
    elif common==31:
      if dest==31:
        if history_type!=2 or self.check_history(31):
          self.addInState(31)  # move into leaf state "Watch.Watch_Running.Running.Next_Select_Time"
    elif common==32:
      if dest==32:
        if history_type!=2 or self.check_history(32):
          self.addInState(32)  # move into leaf state "Watch.Watch_Running.Running.Time"
    elif common==33:
      if dest==33:
        if history_type!=2 or self.check_history(33):
          self.addInState(33)  # move into leaf state "Watch.Watch_Running.Running.Time Increase"
    elif common==34:
      if dest==34:
        if history_type!=2 or self.check_history(34):
          self.addInState(34)  # move into leaf state "Watch.Watch_Running.Running.Time Increase Auto"
    elif common==35:
      if dest==35:
        if history_type!=2 or self.check_history(35):
          self.addInState(35)  # move into leaf state "Watch.Watch_Running.Running.Time_Edit"
    elif common==36:
      if dest==36:
        if history_type!=2 or self.check_history(36):
          self.addInState(36)  # move into leaf state "Watch.Watch_Running.Running.View Alarm"

  def removeOutStates(self, common_state):

    s=self.state
    prev=None
    while s!=None:
      if self.isParent(common_state, s.StateID):
        if prev==None:
          self.state=self.state.Next
        else:
          prev.Next=s.Next
      else:
        prev=s
      s=s.Next

  def eventStr2Int(self, event):

    for i in range(35):
      if event==DigitalWatchStatechart.EventNames[i]:
        return i
    return -1

  def stateInt2Str(self, state):

    if state==-1:
      return ""
    else:
      return DigitalWatchStatechart.StateNames[state]

  def getCurrentStateList(self):

    sl=StringList()
    slend=sl
    s=self.state
    while s!=None:
      sm=self.Submodels[s.StateID]
      curstate=self.stateInt2Str(s.StateID)
      if sm!=None:
        slend.Next=sm.getCurrentStateList()
        while slend.Next!=None:
          slend.Next.str=curstate+"."+slend.Next.str
          slend=slend.Next
      else:
        slend.Next=StringList(curstate)
        slend=slend.Next
      s=s.Next
    return sl.Next

  def getCurrentState(self, states=None):

    if states==None:
      states=self.getCurrentStateList()
      if states!=None:
        states=states.sort()
        strst="['%s'%s]" % (states.str, self.getCurrentState(states))
      else:
        strst="[]"
    else:
      if states.Next:
        strst=", '%s'%s" % (states.Next.str, self.getCurrentState(states.Next))
      else:
        strst=""
    return strst

  def getParentState(self, state):

    return DigitalWatchStatechart.ParentTable[state]

  def getSubstates(self, state):

    substates=None
    if state==-1: # substates of ""
      # add substate "Setup"
      st=IntList()
      st.int=0
      st.Next=substates
      substates=st
      # add substate "Stopped"
      st=IntList()
      st.int=1
      st.Next=substates
      substates=st
      # add substate "Time Edit"
      st=IntList()
      st.int=2
      st.Next=substates
      substates=st
      # add substate "Watch"
      st=IntList()
      st.int=3
      st.Next=substates
      substates=st
    elif state==0: # substates of "Setup"
      pass
    elif state==1: # substates of "Stopped"
      pass
    elif state==2: # substates of "Time Edit"
      pass
    elif state==3: # substates of "Watch"
      # add substate "Watch.Alarm State"
      st=IntList()
      st.int=4
      st.Next=substates
      substates=st
      # add substate "Watch.Alarming State"
      st=IntList()
      st.int=8
      st.Next=substates
      substates=st
      # add substate "Watch.Chrono State"
      st=IntList()
      st.int=12
      st.Next=substates
      substates=st
      # add substate "Watch.Clock State"
      st=IntList()
      st.int=17
      st.Next=substates
      substates=st
      # add substate "Watch.Indiglo"
      st=IntList()
      st.int=20
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running"
      st=IntList()
      st.int=24
      st.Next=substates
      substates=st
    elif state==4: # substates of "Watch.Alarm State"
      # add substate "Watch.Alarm State.Alarm Set"
      st=IntList()
      st.int=5
      st.Next=substates
      substates=st
      # add substate "Watch.Alarm State.Alarm Unset"
      st=IntList()
      st.int=6
      st.Next=substates
      substates=st
      # add substate "Watch.Alarm State.Alarming"
      st=IntList()
      st.int=7
      st.Next=substates
      substates=st
    elif state==5: # substates of "Watch.Alarm State.Alarm Set"
      pass
    elif state==6: # substates of "Watch.Alarm State.Alarm Unset"
      pass
    elif state==7: # substates of "Watch.Alarm State.Alarming"
      pass
    elif state==8: # substates of "Watch.Alarming State"
      # add substate "Watch.Alarming State.Alarm Off"
      st=IntList()
      st.int=9
      st.Next=substates
      substates=st
      # add substate "Watch.Alarming State.Light Off"
      st=IntList()
      st.int=10
      st.Next=substates
      substates=st
      # add substate "Watch.Alarming State.Light On"
      st=IntList()
      st.int=11
      st.Next=substates
      substates=st
    elif state==9: # substates of "Watch.Alarming State.Alarm Off"
      pass
    elif state==10: # substates of "Watch.Alarming State.Light Off"
      pass
    elif state==11: # substates of "Watch.Alarming State.Light On"
      pass
    elif state==12: # substates of "Watch.Chrono State"
      # add substate "Watch.Chrono State.Chrono_On"
      st=IntList()
      st.int=13
      st.Next=substates
      substates=st
      # add substate "Watch.Chrono State.Reset"
      st=IntList()
      st.int=16
      st.Next=substates
      substates=st
    elif state==13: # substates of "Watch.Chrono State.Chrono_On"
      # add substate "Watch.Chrono State.Chrono_On.Paused"
      st=IntList()
      st.int=14
      st.Next=substates
      substates=st
      # add substate "Watch.Chrono State.Chrono_On.Running"
      st=IntList()
      st.int=15
      st.Next=substates
      substates=st
    elif state==14: # substates of "Watch.Chrono State.Chrono_On.Paused"
      pass
    elif state==15: # substates of "Watch.Chrono State.Chrono_On.Running"
      pass
    elif state==16: # substates of "Watch.Chrono State.Reset"
      pass
    elif state==17: # substates of "Watch.Clock State"
      # add substate "Watch.Clock State.Update"
      st=IntList()
      st.int=18
      st.Next=substates
      substates=st
      # add substate "Watch.Clock State.Wait"
      st=IntList()
      st.int=19
      st.Next=substates
      substates=st
    elif state==18: # substates of "Watch.Clock State.Update"
      pass
    elif state==19: # substates of "Watch.Clock State.Wait"
      pass
    elif state==20: # substates of "Watch.Indiglo"
      # add substate "Watch.Indiglo.Indiglo_Off"
      st=IntList()
      st.int=21
      st.Next=substates
      substates=st
      # add substate "Watch.Indiglo.Pressed"
      st=IntList()
      st.int=22
      st.Next=substates
      substates=st
      # add substate "Watch.Indiglo.Waiting"
      st=IntList()
      st.int=23
      st.Next=substates
      substates=st
    elif state==21: # substates of "Watch.Indiglo.Indiglo_Off"
      pass
    elif state==22: # substates of "Watch.Indiglo.Pressed"
      pass
    elif state==23: # substates of "Watch.Indiglo.Waiting"
      pass
    elif state==24: # substates of "Watch.Watch_Running"
      # add substate "Watch.Watch_Running.Running"
      st=IntList()
      st.int=25
      st.Next=substates
      substates=st
    elif state==25: # substates of "Watch.Watch_Running.Running"
      # add substate "Watch.Watch_Running.Running.Alarm Edit"
      st=IntList()
      st.int=26
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Alarm Increase"
      st=IntList()
      st.int=27
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Alarm Increase Auto"
      st=IntList()
      st.int=28
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Chrono"
      st=IntList()
      st.int=29
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Next_Select_Alarm"
      st=IntList()
      st.int=30
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Next_Select_Time"
      st=IntList()
      st.int=31
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Time"
      st=IntList()
      st.int=32
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Time Increase"
      st=IntList()
      st.int=33
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Time Increase Auto"
      st=IntList()
      st.int=34
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.Time_Edit"
      st=IntList()
      st.int=35
      st.Next=substates
      substates=st
      # add substate "Watch.Watch_Running.Running.View Alarm"
      st=IntList()
      st.int=36
      st.Next=substates
      substates=st
    elif state==26: # substates of "Watch.Watch_Running.Running.Alarm Edit"
      pass
    elif state==27: # substates of "Watch.Watch_Running.Running.Alarm Increase"
      pass
    elif state==28: # substates of "Watch.Watch_Running.Running.Alarm Increase Auto"
      pass
    elif state==29: # substates of "Watch.Watch_Running.Running.Chrono"
      pass
    elif state==30: # substates of "Watch.Watch_Running.Running.Next_Select_Alarm"
      pass
    elif state==31: # substates of "Watch.Watch_Running.Running.Next_Select_Time"
      pass
    elif state==32: # substates of "Watch.Watch_Running.Running.Time"
      pass
    elif state==33: # substates of "Watch.Watch_Running.Running.Time Increase"
      pass
    elif state==34: # substates of "Watch.Watch_Running.Running.Time Increase Auto"
      pass
    elif state==35: # substates of "Watch.Watch_Running.Running.Time_Edit"
      pass
    elif state==36: # substates of "Watch.Watch_Running.Running.View Alarm"
      pass
    return substates

  def isHistoryState(self, state):

    return DigitalWatchStatechart.HistoryStateTable[state]>0

  def isLeafState(self, state):

    if isinstance(state, int):
      return DigitalWatchStatechart.LeafStateTable[state]!=None

    elif isinstance(state, str):
      for i in range(DigitalWatchStatechart.StateNum):
        if DigitalWatchStatechart.LeafStateTable[i]==None:
          continue
        if state==DigitalWatchStatechart.LeafStateTable[i] and self.Submodels[i]==None:
          return 1
        elif startsWith(state, DigitalWatchStatechart.LeafStateTable[i]+".") and self.Submodels[i]!=None:
          SubmodelState=state[DigitalWatchStatechart.LeafStateTable[i].length()+1:]
          return self.Submodels[i].isLeafState(SubmodelState)
    return 0

  def isHistoryUp2Date(self, state, time):

    for i in range(DigitalWatchStatechart.StateNum):
      if self.history[state].Times[i]>=time:
        return 1
    return 0

  def mergeHistory(self, state, states, times):

    max=-1
    for i in range(DigitalWatchStatechart.StateNum):
      if times[i]>max:
        max=times[i]
    if self.isHistoryUp2Date(state, max):
      for i in range(DigitalWatchStatechart.StateNum):
        if times[i]>self.history[state].Times[i]:
          self.history[state].States[i]=states[i]
          self.history[state].Times[i]=times[i]
    else:
      self.history[state].States=copy.copy(states)
      self.history[state].Times=copy.copy(times)

  def recordHistory(self, top_state):

    curtime=self.HistoryCount
    self.HistoryCount=self.HistoryCount+1
    s=self.state
    while s!=None:
      child=s.StateID
      states=[]
      times=[]
      for i in range(DigitalWatchStatechart.StateNum):
        states.append(-1)
        times.append(-1)
      states[child]=child
      times[child]=curtime
      if top_state<0 or self.isParent(top_state, child):
        parent=self.getParentState(child)
        if self.isHistoryState(child):
          self.history[child].Submodel=self.Submodels[child]
        while parent>=0 and times[parent]!=curtime:
          states[parent]=child
          times[parent]=curtime
          if self.isHistoryState(parent):
            self.mergeHistory(parent, states, times)
          if parent==top_state:
            break
          child=parent
          parent=self.getParentState(child)
      s=s.Next

  def hasHistoryRecorded(self, state):

    for i in range(DigitalWatchStatechart.StateNum):
      if self.history[state].States[i]!=-1:
        return 1
      if self.Submodels[state]!=None:
        return 1
    return 0

  def hasOrthogonalStateInBetween(self, parent, leaf):

    return DigitalWatchStatechart.OrthogonalInBetween[parent+1][leaf]

  def check_history(self, dest):

    s=self.state
    while s!=None:
      if self.isParent(dest, s.StateID) and not self.hasOrthogonalStateInBetween(dest, s.StateID):
        return 0
      s=s.Next
    return 1

  def getEnabledEvents(self):

    events=EventList()
    if self.isInState(23):
      events.Append("__INTERNAL_0_TIME_0")
    if self.isInState(18):
      events.Append("__INTERNAL_0_TIME_1")
    if self.isInState(34):
      events.Append("__INTERNAL_0_TIME_10")
    if self.isInState(32):
      events.Append("__INTERNAL_0_TIME_11")
    if self.isInState(26):
      events.Append("__INTERNAL_0_TIME_12")
    if self.isInState(2):
      events.Append("__INTERNAL_0_TIME_13")
    if self.isInState(11):
      events.Append("__INTERNAL_0_TIME_14")
    if self.isInState(10):
      events.Append("__INTERNAL_0_TIME_15")
    if self.isInState(5):
      events.Append("__INTERNAL_0_TIME_16")
    if self.isInState(7):
      events.Append("__INTERNAL_0_TIME_17")
    if self.isInState(15):
      events.Append("__INTERNAL_0_TIME_2")
    if self.isInState(31):
      events.Append("__INTERNAL_0_TIME_3")
    if self.isInState(36):
      events.Append("__INTERNAL_0_TIME_4")
    if self.isInState(30):
      events.Append("__INTERNAL_0_TIME_5")
    if self.isInState(35):
      events.Append("__INTERNAL_0_TIME_6")
    if self.isInState(27):
      events.Append("__INTERNAL_0_TIME_7")
    if self.isInState(28):
      events.Append("__INTERNAL_0_TIME_8")
    if self.isInState(33):
      events.Append("__INTERNAL_0_TIME_9")
    if self.isInState(9):
      events.Append("alarmStart")
    if self.isInState(5):
      events.Append("alarmStart")
    if self.isInState(11):
      events.Append("alarmStop")
    if self.isInState(10):
      events.Append("alarmStop")
    if self.isInState(29):
      events.Append("bottomLeftPressed")
    if self.isInState(32):
      events.Append("bottomLeftPressed")
    if self.isInState(26):
      events.Append("bottomLeftPressed")
    if self.isInState(2):
      events.Append("bottomLeftPressed")
    if self.isInState(7):
      events.Append("bottomLeftPressed")
    if self.isInState(36):
      events.Append("bottomLeftReleased")
    if self.isInState(28):
      events.Append("bottomLeftReleased")
    if self.isInState(27):
      events.Append("bottomLeftReleased")
    if self.isInState(33):
      events.Append("bottomLeftReleased")
    if self.isInState(34):
      events.Append("bottomLeftReleased")
    if self.isInState(29):
      events.Append("bottomRightPressed")
    if self.isInState(32):
      events.Append("bottomRightPressed")
    if self.isInState(26):
      events.Append("bottomRightPressed")
    if self.isInState(2):
      events.Append("bottomRightPressed")
    if self.isInState(7):
      events.Append("bottomRightPressed")
    if self.isInState(35):
      events.Append("bottomRightReleased")
    if self.isInState(30):
      events.Append("bottomRightReleased")
    if self.isInState(31):
      events.Append("bottomRightReleased")
    if self.isInState(29):
      events.Append("chronoDisplay")
    if self.isInState(13):
      events.Append("resetChrono")
    if self.isInState(6):
      events.Append("setAlarm")
    if self.isInState(5):
      events.Append("setAlarm")
    if self.isInState(0):
      events.Append("start")
    if self.isInState(3):
      events.Append("stop")
    if self.isInState(18):
      events.Append("timePause")
    if self.isInState(19):
      events.Append("timeStart")
    if self.isInState(15):
      events.Append("toggleChrono")
    if self.isInState(14):
      events.Append("toggleChrono")
    if self.isInState(16):
      events.Append("toggleChrono")
    if self.isInState(32):
      events.Append("topLeftPressed")
    if self.isInState(29):
      events.Append("topLeftPressed")
    if self.isInState(7):
      events.Append("topLeftPressed")
    if self.isInState(21):
      events.Append("topRightPressed")
    if self.isInState(23):
      events.Append("topRightPressed")
    if self.isInState(7):
      events.Append("topRightPressed")
    if self.isInState(22):
      events.Append("topRightReleased")
    return events.Next

  def getHierarchy(self, start_level, state_prefix):

    h=Hierarchy()
    lasth=h
    # Generate state "Setup" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Setup"
    if state_prefix==None:
      lasth.Next.PathName="Setup"
    else:
      lasth.Next.PathName=state_prefix+".Setup"
    lasth.Next.StateNum=0
    lasth.Next.Level=start_level+0
    lasth=lasth.Next
    # Generate state "Stopped" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Stopped"
    if state_prefix==None:
      lasth.Next.PathName="Stopped"
    else:
      lasth.Next.PathName=state_prefix+".Stopped"
    lasth.Next.StateNum=1
    lasth.Next.Level=start_level+0
    lasth=lasth.Next
    # Generate state "Time Edit" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Time Edit"
    if state_prefix==None:
      lasth.Next.PathName="Time Edit"
    else:
      lasth.Next.PathName=state_prefix+".Time Edit"
    lasth.Next.StateNum=2
    lasth.Next.Level=start_level+0
    lasth=lasth.Next
    # Generate state "Watch" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Watch"
    if state_prefix==None:
      lasth.Next.PathName="Watch"
    else:
      lasth.Next.PathName=state_prefix+".Watch"
    lasth.Next.StateNum=3
    lasth.Next.Level=start_level+0
    lasth=lasth.Next
    # Generate state "Watch.Alarm State" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm State"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarm State"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarm State"
    lasth.Next.StateNum=4
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Alarm State.Alarm Set" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Set"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarm State.Alarm Set"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarm State.Alarm Set"
    lasth.Next.StateNum=5
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Alarm State.Alarm Unset" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Unset"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarm State.Alarm Unset"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarm State.Alarm Unset"
    lasth.Next.StateNum=6
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Alarm State.Alarming" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarming"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarm State.Alarming"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarm State.Alarming"
    lasth.Next.StateNum=7
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Alarming State" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarming State"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarming State"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarming State"
    lasth.Next.StateNum=8
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Alarming State.Alarm Off" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Off"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarming State.Alarm Off"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarming State.Alarm Off"
    lasth.Next.StateNum=9
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Alarming State.Light Off" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Light Off"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarming State.Light Off"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarming State.Light Off"
    lasth.Next.StateNum=10
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Alarming State.Light On" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Light On"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Alarming State.Light On"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Alarming State.Light On"
    lasth.Next.StateNum=11
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Chrono State" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Chrono State"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Chrono State"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Chrono State"
    lasth.Next.StateNum=12
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Chrono State.Chrono_On" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Chrono_On"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Chrono State.Chrono_On"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Chrono State.Chrono_On"
    lasth.Next.StateNum=13
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Chrono State.Chrono_On.Paused" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Paused"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Chrono State.Chrono_On.Paused"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Chrono State.Chrono_On.Paused"
    lasth.Next.StateNum=14
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Chrono State.Chrono_On.Running" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Running"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Chrono State.Chrono_On.Running"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Chrono State.Chrono_On.Running"
    lasth.Next.StateNum=15
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Chrono State.Reset" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Reset"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Chrono State.Reset"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Chrono State.Reset"
    lasth.Next.StateNum=16
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Clock State" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Clock State"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Clock State"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Clock State"
    lasth.Next.StateNum=17
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Clock State.Update" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Update"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Clock State.Update"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Clock State.Update"
    lasth.Next.StateNum=18
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Clock State.Wait" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Wait"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Clock State.Wait"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Clock State.Wait"
    lasth.Next.StateNum=19
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Indiglo" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Indiglo"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Indiglo"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Indiglo"
    lasth.Next.StateNum=20
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Indiglo.Indiglo_Off" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Indiglo_Off"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Indiglo.Indiglo_Off"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Indiglo.Indiglo_Off"
    lasth.Next.StateNum=21
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Indiglo.Pressed" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Pressed"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Indiglo.Pressed"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Indiglo.Pressed"
    lasth.Next.StateNum=22
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Indiglo.Waiting" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Waiting"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Indiglo.Waiting"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Indiglo.Waiting"
    lasth.Next.StateNum=23
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Watch_Running"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running"
    lasth.Next.StateNum=24
    lasth.Next.Level=start_level+1
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Running"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running"
    lasth.Next.StateNum=25
    lasth.Next.Level=start_level+2
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Alarm Edit" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Edit"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Alarm Edit"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Alarm Edit"
    lasth.Next.StateNum=26
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Alarm Increase" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Increase"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Alarm Increase"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Alarm Increase"
    lasth.Next.StateNum=27
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Alarm Increase Auto" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Alarm Increase Auto"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Alarm Increase Auto"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Alarm Increase Auto"
    lasth.Next.StateNum=28
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Chrono" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Chrono"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Chrono"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Chrono"
    lasth.Next.StateNum=29
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Next_Select_Alarm" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Next_Select_Alarm"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Next_Select_Alarm"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Next_Select_Alarm"
    lasth.Next.StateNum=30
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Next_Select_Time" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Next_Select_Time"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Next_Select_Time"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Next_Select_Time"
    lasth.Next.StateNum=31
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Time" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Time"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Time"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Time"
    lasth.Next.StateNum=32
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Time Increase" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Time Increase"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Time Increase"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Time Increase"
    lasth.Next.StateNum=33
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Time Increase Auto" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Time Increase Auto"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Time Increase Auto"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Time Increase Auto"
    lasth.Next.StateNum=34
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.Time_Edit" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="Time_Edit"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.Time_Edit"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.Time_Edit"
    lasth.Next.StateNum=35
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    # Generate state "Watch.Watch_Running.Running.View Alarm" in the hierarchy table
    lasth.Next=Hierarchy()
    lasth.Next.StateName="View Alarm"
    if state_prefix==None:
      lasth.Next.PathName="Watch.Watch_Running.Running.View Alarm"
    else:
      lasth.Next.PathName=state_prefix+".Watch.Watch_Running.Running.View Alarm"
    lasth.Next.StateNum=36
    lasth.Next.Level=start_level+3
    lasth=lasth.Next
    return h.Next

  def topLevelHistory(self):

    s=self.state.StateID
    t=self.getParentState(s)
    while t!=-1:
      s=t
      t=self.getParentState(s)
    self.changeState(s, s)

  def runActionCode(self, code_num):

    if code_num==0: # model finalizer
      pass
    elif code_num==1: # model initializer
      pass
    elif code_num==2: # output action(s) of a transition
      self.runCode("dump_message(\"controller.unsetIndiglo()\")")
      self.runCode("controller.unsetIndiglo()")
    elif code_num==3: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseTimeByOne()\")")
      self.runCode("controller.increaseTimeByOne()")
      # repeated timed transition
      self.addSchedule(18, DigitalWatchStatechart.IntervalTable[1], DigitalWatchStatechart.EventNames[1], self)
    elif code_num==4: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelected()\")")
      self.runCode("controller.increaseSelected()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
      # repeated timed transition
      self.addSchedule(34, DigitalWatchStatechart.IntervalTable[2], DigitalWatchStatechart.EventNames[2], self)
    elif code_num==5: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshDisplay()\")")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
      # repeated timed transition
      self.addSchedule(32, DigitalWatchStatechart.IntervalTable[3], DigitalWatchStatechart.EventNames[3], self)
    elif code_num==6: # output action(s) of a transition
      self.runCode("controller.stopSelection()")
      self.runCode("controller.refreshDateDisplay()")
      self.runCode("controller.refreshTimeDisplay()")
    elif code_num==7: # output action(s) of a transition
      self.runCode("controller.stopSelection()")
      self.runCode("controller.refreshDateDisplay()")
      self.runCode("controller.refreshTimeDisplay()")
    elif code_num==8: # output action(s) of a transition
      self.runCode("controller.unsetIndiglo()")
    elif code_num==9: # output action(s) of a transition
      self.runCode("controller.setIndiglo()")
    elif code_num==10: # output action(s) of a transition
      self.runCode("dump_message(\"controller.checkTime()\")")
      self.runCode("controller.checkTime()")
      # repeated timed transition
      self.addSchedule(5, DigitalWatchStatechart.IntervalTable[8], DigitalWatchStatechart.EventNames[8], self)
    elif code_num==11: # output action(s) of a transition
      self.runCode("dump_message(\"Event: alarmStop\")")
      self.runCode("eventhandler.event(\"alarmStop\", [], None)")
    elif code_num==12: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseChronoByOne()\")")
      self.runCode("controller.increaseChronoByOne()")
      self.runCode("eventhandler.event(\"chronoDisplay\", [], None)")
      # repeated timed transition
      self.addSchedule(15, DigitalWatchStatechart.IntervalTable[10], DigitalWatchStatechart.EventNames[10], self)
    elif code_num==13: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshTimeDisplay()\")")
      self.runCode("controller.stopSelection()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
      self.runCode("dump_message(\"Event: startTime\")")
      self.runCode("eventhandler.event(\"startTime\", [], None)")
    elif code_num==14: # output action(s) of a transition
      self.runCode("dump_message(\"controller.startSelection()\")")
      self.runCode("controller.startSelection()")
    elif code_num==15: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshTimeDisplay()\")")
      self.runCode("controller.stopSelection()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
      self.runCode("dump_message(\"Event: startTime\")")
      self.runCode("eventhandler.event(\"startTime\", [], None)")
    elif code_num==16: # output action(s) of a transition
      self.runCode("dump_message(\"controller.startSelection()\")")
      self.runCode("controller.startSelection()")
      self.runCode("eventhandler.event(\"timePause\", [], None)")
    elif code_num==17: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelection()\")")
      self.runCode("controller.increaseSelection()")
      self.runCode("controller.refreshAlarmDisplay()")
    elif code_num==18: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelection()\")")
      self.runCode("controller.increaseSelection()")
      self.runCode("controller.refreshAlarmDisplay()")
      # repeated timed transition
      self.addSchedule(28, DigitalWatchStatechart.IntervalTable[16], DigitalWatchStatechart.EventNames[16], self)
    elif code_num==19: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelected()\")")
      self.runCode("controller.increaseSelected()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==20: # output action(s) of a transition
      self.runCode("controller.setIndiglo()")
    elif code_num==21: # output action(s) of a transition
      self.runCode("dump_message(\"Stop Alarm\")")
    elif code_num==22: # output action(s) of a transition
      self.runCode("dump_message(\"Stop Alarm\")")
    elif code_num==23: # output action(s) of a transition
      self.runCode("dump_message(\"Event: resetChrono\")")
      self.runCode("eventhandler.event(\"resetChrono\", [], None)")
    elif code_num==24: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshAlarmDisplay()\")")
      self.runCode("controller.refreshAlarmDisplay()")
      self.runCode("dump_message(\"Event: setAlarm\")")
      self.runCode("eventhandler.event(\"setAlarm\", [], None)")
    elif code_num==25: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelection()\")")
      self.runCode("controller.increaseSelection()")
      self.runCode("controller.refreshAlarmDisplay()")
    elif code_num==26: # output action(s) of a transition
      self.runCode("dump_message(\"controller.increaseSelection()\")")
      self.runCode("controller.increaseSelection()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==27: # output action(s) of a transition
      self.runCode("dump_message(\"Event: alarmStop\")")
      self.runCode("eventhandler.event(\"alarmStop\", [], None)")
    elif code_num==28: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshTimeDisplay()\")")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==29: # output action(s) of a transition
      self.runCode("dump_message(\"Event: chrono\")")
      self.runCode("eventhandler.event(\"toggleChrono\", [], None)")
    elif code_num==30: # output action(s) of a transition
      self.runCode("dump_message(\"Pending time edit mode\")")
    elif code_num==31: # output action(s) of a transition
      self.runCode("dump_message(\"Event: alarmStop\")")
      self.runCode("eventhandler.event(\"alarmStop\", [], None)")
    elif code_num==32: # output action(s) of a transition
      self.runCode("dump_message(\"Time Mode\")")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==33: # output action(s) of a transition
      self.runCode("dump_message(\"controller.nextSelection()\")")
      self.runCode("controller.selectNext()")
      self.runCode("controller.refreshAlarmDisplay()")
    elif code_num==34: # output action(s) of a transition
      self.runCode("dump_message(\"controller.nextSelection()\")")
      self.runCode("controller.selectNext()")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==35: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshChronoDisplay()\")")
      self.runCode("controller.refreshChronoDisplay()")
    elif code_num==36: # output action(s) of a transition
      self.runCode("dump_message(\"controller.resetChrono()\")")
      self.runCode("controller.resetChrono()")
      self.runCode("eventhandler.event(\"chronoDisplay\", [], None)")
    elif code_num==37: # output action(s) of a transition
      self.runCode("dump_message(\"controller.setAlarm()\")")
      self.runCode("controller.setAlarm()")
    elif code_num==38: # output action(s) of a transition
      self.runCode("dump_message(\"controller.setAlarm()\")")
      self.runCode("controller.setAlarm()")
    elif code_num==39: # output action(s) of a transition
      self.runCode("dump_message(\"Starting Watch\")")
      self.runCode("controller=eventhandler.get_event_params()")
    elif code_num==40: # output action(s) of a transition
      self.runCode("dump_message(\"Stopping watch\")")
    elif code_num==41: # output action(s) of a transition
      self.runCode("dump_message(\"Clock State: Edit Time.\")")
    elif code_num==42: # output action(s) of a transition
      self.runCode("dump_message(\"Clock State: Update time.\")")
    elif code_num==43: # output action(s) of a transition
      self.runCode("dump_message(\"Chrono:  Paused\")")
    elif code_num==44: # output action(s) of a transition
      self.runCode("dump_message(\"Chrono:  Running\")")
    elif code_num==45: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshChronoDisplay()\")")
      self.runCode("controller.refreshChronoDisplay()")
    elif code_num==46: # output action(s) of a transition
      self.runCode("dump_message(\"controller.refreshTimeDisplay()\")")
      self.runCode("controller.refreshTimeDisplay()")
      self.runCode("controller.refreshDateDisplay()")
    elif code_num==47: # output action(s) of a transition
      self.runCode("dump_message(\"Event: alarmStop\")")
      self.runCode("eventhandler.event(\"alarmStop\", [], None)")
    elif code_num==48: # output action(s) of a transition
      self.runCode("dump_message(\"controller.setIndiglo()\")")
      self.runCode("controller.setIndiglo()")
    elif code_num==49: # output action(s) of a transition
      self.runCode("dump_message(\"Indiglo:  Back to pressed state.\")")
    elif code_num==50: # output action(s) of a transition
      self.runCode("dump_message(\"Event: alarmStop\")")
      self.runCode("eventhandler.event(\"alarmStop\", [], None)")
    elif code_num==51: # output action(s) of a transition
      self.runCode("dump_message(\"Indiglo:  3 seconds till light off.\")")
    elif code_num==52: # enter actions for state "Watch.Watch_Running.Running.Time_Edit"
      # a timed transition
      self.addSchedule(35, DigitalWatchStatechart.IntervalTable[14], DigitalWatchStatechart.EventNames[14], self)
    elif code_num==53: # enter actions for state "Watch.Alarm State.Alarm Set"
      self.runCode("dump_message(\"ALARM SET\")")
      # a timed transition
      self.addSchedule(5, DigitalWatchStatechart.IntervalTable[8], DigitalWatchStatechart.EventNames[8], self)
    elif code_num==54: # enter actions for state "Watch.Watch_Running.Running.Alarm Edit"
      # a timed transition
      self.addSchedule(26, DigitalWatchStatechart.IntervalTable[4], DigitalWatchStatechart.EventNames[4], self)
    elif code_num==55: # enter actions for state "Watch.Watch_Running.Running.Time Increase Auto"
      # a timed transition
      self.addSchedule(34, DigitalWatchStatechart.IntervalTable[2], DigitalWatchStatechart.EventNames[2], self)
    elif code_num==56: # enter actions for state "Watch.Watch_Running.Running.View Alarm"
      # a timed transition
      self.addSchedule(36, DigitalWatchStatechart.IntervalTable[12], DigitalWatchStatechart.EventNames[12], self)
    elif code_num==57: # enter actions for state "Watch.Chrono State.Chrono_On.Running"
      # a timed transition
      self.addSchedule(15, DigitalWatchStatechart.IntervalTable[10], DigitalWatchStatechart.EventNames[10], self)
    elif code_num==58: # enter actions for state "Watch.Watch_Running.Running.Next_Select_Time"
      # a timed transition
      self.addSchedule(31, DigitalWatchStatechart.IntervalTable[11], DigitalWatchStatechart.EventNames[11], self)
    elif code_num==59: # enter actions for state "Watch.Alarming State.Light On"
      # a timed transition
      self.addSchedule(11, DigitalWatchStatechart.IntervalTable[6], DigitalWatchStatechart.EventNames[6], self)
    elif code_num==60: # enter actions for state "Watch.Watch_Running.Running.Next_Select_Alarm"
      # a timed transition
      self.addSchedule(30, DigitalWatchStatechart.IntervalTable[13], DigitalWatchStatechart.EventNames[13], self)
    elif code_num==61: # enter actions for state "Watch.Clock State.Update"
      # a timed transition
      self.addSchedule(18, DigitalWatchStatechart.IntervalTable[1], DigitalWatchStatechart.EventNames[1], self)
    elif code_num==62: # enter actions for state "Watch.Alarm State.Alarming"
      self.runCode("dump_message(\"ALARM RUNNING\")")
      # a timed transition
      self.addSchedule(7, DigitalWatchStatechart.IntervalTable[9], DigitalWatchStatechart.EventNames[9], self)
    elif code_num==63: # enter actions for state "Watch.Indiglo.Waiting"
      # a timed transition
      self.addSchedule(23, DigitalWatchStatechart.IntervalTable[0], DigitalWatchStatechart.EventNames[0], self)
    elif code_num==64: # enter actions for state "Time Edit"
      # a timed transition
      self.addSchedule(2, DigitalWatchStatechart.IntervalTable[5], DigitalWatchStatechart.EventNames[5], self)
    elif code_num==65: # enter actions for state "Watch.Watch_Running.Running.Alarm Increase"
      # a timed transition
      self.addSchedule(27, DigitalWatchStatechart.IntervalTable[15], DigitalWatchStatechart.EventNames[15], self)
    elif code_num==66: # enter actions for state "Watch.Watch_Running.Running.Time Increase"
      # a timed transition
      self.addSchedule(33, DigitalWatchStatechart.IntervalTable[17], DigitalWatchStatechart.EventNames[17], self)
    elif code_num==67: # enter actions for state "Watch.Watch_Running.Running.Time"
      # a timed transition
      self.addSchedule(32, DigitalWatchStatechart.IntervalTable[3], DigitalWatchStatechart.EventNames[3], self)
    elif code_num==68: # enter actions for state "Watch.Alarm State.Alarm Unset"
      self.runCode("dump_message(\"ALARM UNSET\")")
    elif code_num==69: # enter actions for state "Watch.Alarming State.Light Off"
      # a timed transition
      self.addSchedule(10, DigitalWatchStatechart.IntervalTable[7], DigitalWatchStatechart.EventNames[7], self)
    elif code_num==70: # enter actions for state "Watch.Watch_Running.Running.Alarm Increase Auto"
      # a timed transition
      self.addSchedule(28, DigitalWatchStatechart.IntervalTable[16], DigitalWatchStatechart.EventNames[16], self)
    elif code_num==71: # exit actions for state "Watch.Watch_Running.Running.Time_Edit"
      # clean up timed transitions
      self.removeSchedule(35, self)
    elif code_num==72: # exit actions for state "Watch.Alarm State.Alarm Set"
      # clean up timed transitions
      self.removeSchedule(5, self)
    elif code_num==73: # exit actions for state "Watch.Watch_Running.Running.View Alarm"
      # clean up timed transitions
      self.removeSchedule(36, self)
    elif code_num==74: # exit actions for state "Watch.Chrono State.Chrono_On.Running"
      # clean up timed transitions
      self.removeSchedule(15, self)
    elif code_num==75: # exit actions for state "Watch.Watch_Running.Running.Next_Select_Time"
      # clean up timed transitions
      self.removeSchedule(31, self)
    elif code_num==76: # exit actions for state "Watch.Alarming State.Light On"
      # clean up timed transitions
      self.removeSchedule(11, self)
    elif code_num==77: # exit actions for state "Watch.Watch_Running.Running.Next_Select_Alarm"
      # clean up timed transitions
      self.removeSchedule(30, self)
    elif code_num==78: # exit actions for state "Watch.Clock State.Update"
      # clean up timed transitions
      self.removeSchedule(18, self)
    elif code_num==79: # exit actions for state "Watch.Alarming State.Light Off"
      # clean up timed transitions
      self.removeSchedule(10, self)
    elif code_num==80: # exit actions for state "Watch.Indiglo.Waiting"
      # clean up timed transitions
      self.removeSchedule(23, self)
    elif code_num==81: # exit actions for state "Time Edit"
      # clean up timed transitions
      self.removeSchedule(2, self)
    elif code_num==82: # exit actions for state "Watch.Watch_Running.Running.Alarm Increase"
      # clean up timed transitions
      self.removeSchedule(27, self)
    elif code_num==83: # exit actions for state "Watch.Alarm State.Alarming"
      # clean up timed transitions
      self.removeSchedule(7, self)
    elif code_num==84: # exit actions for state "Watch.Watch_Running.Running.Time Increase"
      # clean up timed transitions
      self.removeSchedule(33, self)
    elif code_num==85: # exit actions for state "Watch.Watch_Running.Running.Time"
      # clean up timed transitions
      self.removeSchedule(32, self)
    elif code_num==86: # exit actions for state "Watch.Watch_Running.Running.Alarm Increase Auto"
      # clean up timed transitions
      self.removeSchedule(28, self)
    elif code_num==87: # exit actions for state "Watch.Watch_Running.Running.Alarm Edit"
      # clean up timed transitions
      self.removeSchedule(26, self)
    elif code_num==88: # exit actions for state "Watch.Watch_Running.Running.Time Increase Auto"
      # clean up timed transitions
      self.removeSchedule(34, self)

  def testCondition(self, cond_num):

    if cond_num==0 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==1 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==2 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==3 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==4 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==5 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==6 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==7 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==8 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==9 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==10 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==11 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==12 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==13 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==14 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==15 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==16 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==17 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==18 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==19 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==20 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==21 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==22 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==23 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==24 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==25 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==26 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==27 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==28 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==29 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==30 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==31 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==32 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==33 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==34 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==35 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==36 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==37 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==38 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==39 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==40 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==41 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==42 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==43 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==44 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==45 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==46 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==47 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==48 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==49 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==50 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==51 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==52 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==53 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==54 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==55 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==56 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    elif cond_num==57 and \
       eval("(1)", self.DefaultInterpreter.locals):
      return 1
    return 0

  def runEnterActions(self, state):

    if state==35: # enter action(s) for state "Watch.Watch_Running.Running.Time_Edit"
      self.runActionCode(52)
    elif state==5: # enter action(s) for state "Watch.Alarm State.Alarm Set"
      self.runActionCode(53)
    elif state==26: # enter action(s) for state "Watch.Watch_Running.Running.Alarm Edit"
      self.runActionCode(54)
    elif state==34: # enter action(s) for state "Watch.Watch_Running.Running.Time Increase Auto"
      self.runActionCode(55)
    elif state==36: # enter action(s) for state "Watch.Watch_Running.Running.View Alarm"
      self.runActionCode(56)
    elif state==15: # enter action(s) for state "Watch.Chrono State.Chrono_On.Running"
      self.runActionCode(57)
    elif state==31: # enter action(s) for state "Watch.Watch_Running.Running.Next_Select_Time"
      self.runActionCode(58)
    elif state==11: # enter action(s) for state "Watch.Alarming State.Light On"
      self.runActionCode(59)
    elif state==30: # enter action(s) for state "Watch.Watch_Running.Running.Next_Select_Alarm"
      self.runActionCode(60)
    elif state==18: # enter action(s) for state "Watch.Clock State.Update"
      self.runActionCode(61)
    elif state==7: # enter action(s) for state "Watch.Alarm State.Alarming"
      self.runActionCode(62)
    elif state==23: # enter action(s) for state "Watch.Indiglo.Waiting"
      self.runActionCode(63)
    elif state==2: # enter action(s) for state "Time Edit"
      self.runActionCode(64)
    elif state==27: # enter action(s) for state "Watch.Watch_Running.Running.Alarm Increase"
      self.runActionCode(65)
    elif state==33: # enter action(s) for state "Watch.Watch_Running.Running.Time Increase"
      self.runActionCode(66)
    elif state==32: # enter action(s) for state "Watch.Watch_Running.Running.Time"
      self.runActionCode(67)
    elif state==6: # enter action(s) for state "Watch.Alarm State.Alarm Unset"
      self.runActionCode(68)
    elif state==10: # enter action(s) for state "Watch.Alarming State.Light Off"
      self.runActionCode(69)
    elif state==28: # enter action(s) for state "Watch.Watch_Running.Running.Alarm Increase Auto"
      self.runActionCode(70)

  def runExitActions(self, state):

    if state==35: # exit action(s) for state "Watch.Watch_Running.Running.Time_Edit"
      self.runActionCode(71)
    elif state==5: # exit action(s) for state "Watch.Alarm State.Alarm Set"
      self.runActionCode(72)
    elif state==36: # exit action(s) for state "Watch.Watch_Running.Running.View Alarm"
      self.runActionCode(73)
    elif state==15: # exit action(s) for state "Watch.Chrono State.Chrono_On.Running"
      self.runActionCode(74)
    elif state==31: # exit action(s) for state "Watch.Watch_Running.Running.Next_Select_Time"
      self.runActionCode(75)
    elif state==11: # exit action(s) for state "Watch.Alarming State.Light On"
      self.runActionCode(76)
    elif state==30: # exit action(s) for state "Watch.Watch_Running.Running.Next_Select_Alarm"
      self.runActionCode(77)
    elif state==18: # exit action(s) for state "Watch.Clock State.Update"
      self.runActionCode(78)
    elif state==10: # exit action(s) for state "Watch.Alarming State.Light Off"
      self.runActionCode(79)
    elif state==23: # exit action(s) for state "Watch.Indiglo.Waiting"
      self.runActionCode(80)
    elif state==2: # exit action(s) for state "Time Edit"
      self.runActionCode(81)
    elif state==27: # exit action(s) for state "Watch.Watch_Running.Running.Alarm Increase"
      self.runActionCode(82)
    elif state==7: # exit action(s) for state "Watch.Alarm State.Alarming"
      self.runActionCode(83)
    elif state==33: # exit action(s) for state "Watch.Watch_Running.Running.Time Increase"
      self.runActionCode(84)
    elif state==32: # exit action(s) for state "Watch.Watch_Running.Running.Time"
      self.runActionCode(85)
    elif state==28: # exit action(s) for state "Watch.Watch_Running.Running.Alarm Increase Auto"
      self.runActionCode(86)
    elif state==26: # exit action(s) for state "Watch.Watch_Running.Running.Alarm Edit"
      self.runActionCode(87)
    elif state==34: # exit action(s) for state "Watch.Watch_Running.Running.Time Increase Auto"
      self.runActionCode(88)

  def compareSchedule(self, sched_a, sched_b):

    return cmp(sched_a[1], sched_b[1])

  def addSchedule(self, id, interval, event, scheduler):

    if self.Parent!=None:  # Non-top-level model
      self.Parent.addSchedule(id, interval, event, scheduler)
      return
    f=eval(interval, self.DefaultInterpreter.locals)
    ##self.SchedulerCond.acquire()
    t=time.time()+f
    s=[id, t, interval, event, scheduler]
    self.Schedules.append(s)
    self.Schedules.sort(self.compareSchedule)
    ##self.SchedulerCond.notify()
    ##self.SchedulerCond.release()

  def removeSchedule(self, id, scheduler):

    if self.Parent!=None:  # Non-top-level model
      self.Parent.removeSchedule(id, scheduler)
      return
    ##self.SchedulerCond.acquire()
    i=0
    while i<len(self.Schedules):
      if self.Schedules[i][0]==id and self.Schedules[i][4]==scheduler:
        del self.Schedules[i]
      else:
        i=i+1
    ##self.SchedulerCond.release()

  def scheduler(self):

    if( not self.Schedules): return

    while( self.Schedules and self.Schedules[0][1]<=time.time()):
      this_sched=self.Schedules[0]
      del self.Schedules[0]
      self.event(this_sched[3], [], None, this_sched[4])

    if self.Schedules:
      t=self.Schedules[0][1]-time.time()

  def recordAllEnteredStates(self):

    st=self.state
    while st!=None:
      self.recordEnteredState(st.StateID, 1, 1)
      st=st.Next

  def recordEnteredState(self, s, superstates=0, submodel=0, commonstate=-1):

    # test if s is already recorded
    se=self.StatesEntered
    found=0
    while se!=None:
      if se.int==s:
        found=1
        break
      se=se.Next

    if not found:
      if superstates:
        parent=self.getParentState(s)
        if parent>=0 and parent!=commonstate:
          self.recordEnteredState(parent, 1, 0, commonstate)
      st=IntList()
      st.Next=self.StatesEntered
      st.int=s
      self.StatesEntered=st
      if submodel and self.Submodels[s]:
        self.Submodels[s].recordAllEnteredStates()

  def runAllEnterActions(self):

    self.runEnterActionsForStates(self.StatesEntered, 1)

  def runEnterActionsForStates(self, states, recursive=0):

    if states:
      self.runEnterActionsForStates(states.Next, 0)
      self.runEnterActions(states.int)
    if recursive:
      for s in self.Submodels:
        if s:
          s.runAllEnterActions()

  def runExitActionsForStates(self, common_state):

    substates=self.getSubstates(common_state)
    if substates==None:
      s=self.state
      while s!=None and s.StateID!=common_state:
        s=s.Next
      if s!=None and self.Submodels[s.StateID]:
        self.Submodels[s.StateID].runExitActionsForStates(-1)
      return s!=None
    else:
      has_current_substate=0
      while substates!=None:
        res=self.runExitActionsForStates(substates.int)
        has_current_substate=has_current_substate or res
        if res:
          self.runExitActions(substates.int)
        substates=substates.Next
      return has_current_substate

  def runInitializer(self):

    self.runActionCode(1)
    for s in self.Submodels:
      if s:
        s.runInitializer()

  def runFinalizer(self):

    if self.Started:
      self.Started=0
      for s in self.Submodels:
        if s:
          s.runFinalizer()
      self.runActionCode(0)
      if self.Parent==None:  # Top-level model
        ##self.EventsCond.acquire()
        ##self.SchedulerCond.acquire()
        self.Stopped=1
        ##self.EventsCond.notify()
        ##self.SchedulerCond.notify()
        ##self.SchedulerCond.release()
        ##self.EventsCond.release()
      else:
        self.Stopped=1

  def clearEnteredStates(self):

    self.StatesEntered=None
    for s in self.Submodels:
      if s:
        s.clearEnteredStates()

  def get_current_state(self):

    return self.getCurrentState()

  def runCode(self, c):

    self.DefaultInterpreter.runsource(c+"\n", "<input>", "exec")

  def setupInterpreter(self):

    self.DefaultInterpreter.locals["eventhandler"]=self
    self.DefaultInterpreter.locals["dump_message"]=self.dump_message

  def get_event_params(self):

    return self.params

  def dump_message(self, msg):

    print msg

  def is_in_state(self, s, check_substate=1):

    return self.isInState(s, check_substate)

  def start(self, lock=None, run_enter_actions=1, TkInstance = None):

    if self.Parent==None:  # Top-level model
      if run_enter_actions:
        self.runEnterActionsForStates(self.StatesEntered, 1)
      self.Started=1
      
      if( TkInstance ):
        self.sleepMethod = TkInstance.after 
        startTkMainloop = False
      else:
        import Tkinter
        TkInstance = Tkinter.Tk()
        self.sleepMethod = TkInstance.after 
        startTkMainloop = True
      
      self.pollingStation() 
      ##thread.start_new_thread(self.handleEvent_wrapper, ())
      ##thread.start_new_thread(self.scheduler, ())
      ## if lock:
        ## lock.release()
    else:
      self.Started=1
    for submodel in self.Submodels:
      if submodel!=None:
        submodel.start()

    if( self.Parent==None and startTkMainloop == None ): TkInstance.mainloop()

  def pollingStation(self):

    self.sleepMethod( 100, self.pollingStation )
    if self.Stopped: return 
    #self.handleEvent_wrapper()
    self.scheduler()
    #todo: pollingStation\,
  def shutdown(self):

    pass

  def handleEvent_wrapper(self):

    if( self.PendingEvents==None ): return
    event=self.PendingEvents
    self.PendingEvents=self.PendingEvents.Next
    if self.PendingEvents==None:
      self.PendingEventsTail=None
    event.next=None
    self.handleEvent(event.Event[0], event.Event[1], event.Event[2], event.Event[3])
    self.handleEvent_wrapper()

  def event(self, e, params=[], cond=None, scheduler=None):

    ev=EventList()
    ev.Event=[e, params, cond, scheduler]
    if self.PendingEventsTail!=None:
      self.PendingEventsTail.Next=ev
    else:
      self.PendingEvents=ev
    self.PendingEventsTail=ev
    self.handleEvent_wrapper()


# main
if __name__=="__main__":
  DigitalWatchStatechart.main(sys.argv)